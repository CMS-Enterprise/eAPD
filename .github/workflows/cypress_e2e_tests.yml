name: Cypress E2E Tests
on:
  schedule:
    - cron: '0 1 * * *' # every day at 1 am
  pull_request:
    branches:
      - main

jobs:
  cypress-run:
    environment: Preview
    runs-on: ubuntu-18.04
    timeout-minutes: 150
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Starting Dockerized eAPD App
        working-directory: ./
        env:
          NODE_ENV: development
          OKTA_DOMAIN: ${{ secrets.OKTA_DOMAIN }}
          OKTA_API_KEY: ${{ secrets.OKTA_API_KEY }}
          OKTA_SERVER_ID: ${{ secrets.OKTA_SERVER_ID }}
          OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          docker-compose up -d
          docker-compose exec -T api npm run migrate
          docker-compose exec -T api npm run seed
        # cache NPM modules and Cypress binary folder
        # we can use "package-lock.json" as the key file
        # to make sure we use the precise Cypress version
        # (which is important when using ^ version in package.json)
        # see https://github.com/actions/cache
      - name: Cache NPM and Cypress ðŸ“¦
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: my-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node:version: '14'
      - name: Install cypress dependencies
        working-directory: ./integrationTests
        run: npm ci
      - name: Cypress setup
        working-directory: ./integrationTests
        env:
          NODE_ENV: development
          OKTA_DOMAIN: ${{ secrets.OKTA_DOMAIN }}
          OKTA_API_KEY: ${{ secrets.OKTA_API_KEY }}
          OKTA_SERVER_ID: ${{ secrets.OKTA_SERVER_ID }}
          OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CYPRESS_ENV: ${{ secrets.CYPRESS_ENV }}
        run: |
          sh cypress-ci-setup.sh
      - name: Cypress tests
        uses: cypress-io/github-action@v2
        with:
          # we have already installed all dependencies above
          install: false
          build: npx cypress info
          working-directory: ./integrationTests
          config-file: cypress.json
          wait-on: 'http://localhost:8080'
          headless: true
          record: true
          parallel: true
          group: 'Actions example'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_ENV: development
          OKTA_DOMAIN: ${{ secrets.OKTA_DOMAIN }}
          OKTA_API_KEY: ${{ secrets.OKTA_API_KEY }}
          OKTA_SERVER_ID: ${{ secrets.OKTA_SERVER_ID }}
          OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CYPRESS_ENV: ${{ secrets.CYPRESS_ENV }}
      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          working-directory: ./integrationTests
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload videos
        uses: actions/upload-artifact@v2
        if: always()
        with:
          working-directory: ./integrationTests
          name: cypress-videos
          path: cypress/videos
