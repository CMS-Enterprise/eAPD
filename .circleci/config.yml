version: 2
jobs:
  prepare web dependencies cache:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-apd-{{ checksum "web/package.json" }}
      - run:
          name: install dependencies
          working_directory: ~/project/web
          command: npm install
      - save_cache:
          key: v1-cms-hitech-apd-{{ checksum "web/package.json" }}
          paths:
            - web/node_modules

  web lint:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-apd-{{ checksum "web/package.json" }}
      - run:
          name: run linter
          working_directory: ~/project/web
          command: npm run lint

  web test:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-apd-{{ checksum "web/package.json" }}
      - run:
          name: run tests
          working_directory: ~/project/web
          command: npm test
      - run:
          name: report coverage
          when: always
          working_directory: ~/project/web
          command: bash <(curl -s https://codecov.io/bash)

  prepare api dependencies cache:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-api-{{ checksum "api/package.json" }}
      - run:
          name: install dependencies
          working_directory: ~/project/api
          command: npm install
      - save_cache:
          key: v1-cms-hitech-api-{{ checksum "api/package.json" }}
          paths:
            - api/node_modules

  api lint:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-api-{{ checksum "api/package.json" }}
      - run:
          name: run linter
          working_directory: ~/project/api
          command: npm run lint

  api unit test:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-api-{{ checksum "api/package.json" }}
      - run:
          name: run tests
          working_directory: ~/project/api
          command: npm test
      - run:
          name: report coverage
          when: always
          working_directory: ~/project/api
          command: bash <(curl -s https://codecov.io/bash)

  api endpoint test:
    docker:
      - image: node:8
        environment:
          - NODE_ENV=test
      - image: postgres:latest
        name: db
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=cms
          - POSTGRES_DB=hitech_apd_test
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-api-{{ checksum "api/package.json" }}
      - run:
          name: wait for database
          command: sleep 5
      - run:
          name: database migration
          working_directory: ~/project/api
          command: npm run migrate
      - run:
          name: database seed
          working_directory: ~/project/api
          command: npm run seed
      - run:
          name: start the API
          working_directory: ~/project/api
          command: npm start
          background: true
      - run:
          name: wait for API
          command: sleep 5
      - run:
          name: run tests
          working_directory: ~/project/api
          command: npm run test-endpoints

  deploy staging:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-apd-{{ checksum "web/package.json" }}
      - run:
          name: deploy to prod
          command: ./bin/deploy.sh

  deploy ux testing:
    docker:
      - image: node:8
    steps:
      - checkout
      - restore_cache:
          key: v1-cms-hitech-apd-{{ checksum "web/package.json" }}
      - run:
          name: deploy to UX testing
          command: ./bin/deploy-ux-testing.sh

workflows:
  version: 2
  web:
    jobs:
      - prepare web dependencies cache
      - prepare api dependencies cache
      - web lint:
          requires:
            - prepare web dependencies cache
      - web test:
          requires:
            - prepare web dependencies cache
      - api lint:
          requires:
             - prepare api dependencies cache
      - api unit test:
          requires:
             - prepare api dependencies cache
      - api endpoint test:
          requires:
             - prepare api dependencies cache
      - deploy staging:
          filters:
            branches:
              only:
                - master
          requires:
            - web test
            - api unit test
            - api endpoint test
      - request deploy for UX testing:
          type: approval
          filters:
            branches:
              only:
                - master
      - deploy ux testing:
          filters:
            branches:
              only:
                - master
          requires:
            - request deploy for UX testing
            - web test
            - api unit test
            - api endpoint test
