// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`previous activities component renders correctly if data is not loaded 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PreviousActivities
    previousActivitySummary="previous"
    updateApd={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Subsection
          id="prev-activities-outline"
          nested={false}
          open={false}
          resource="previousActivities.outline"
        >
          <div
            className="mb-tiny bold"
          >
            Previous Activities Summary
          </div>
          <RichText
            content="previous"
            editorClassName="rte-textarea-l"
            onSync={[Function]}
          />
        </Subsection>,
        <Subsection
          id="prev-activities-table"
          nested={false}
          open={false}
          resource="previousActivities.actualExpenses"
        >
          <div
            className="mb3"
          >
            <Connect(ApdPreviousActivityTable) />
          </div>
          <div
            className="mb3"
          >
            <Connect(ApdPreviousActivityTableMMIS) />
          </div>
        </Subsection>,
      ],
      "id": "prev-activities",
      "resource": "previousActivities",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div
              className="mb-tiny bold"
            >
              Previous Activities Summary
            </div>,
            <RichText
              content="previous"
              editorClassName="rte-textarea-l"
              onSync={[Function]}
            />,
          ],
          "id": "prev-activities-outline",
          "nested": false,
          "open": false,
          "resource": "previousActivities.outline",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Previous Activities Summary",
              "className": "mb-tiny bold",
            },
            "ref": null,
            "rendered": "Previous Activities Summary",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "content": "previous",
              "editorClassName": "rte-textarea-l",
              "onSync": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <div
              className="mb3"
            >
              <Connect(ApdPreviousActivityTable) />
            </div>,
            <div
              className="mb3"
            >
              <Connect(ApdPreviousActivityTableMMIS) />
            </div>,
          ],
          "id": "prev-activities-table",
          "nested": false,
          "open": false,
          "resource": "previousActivities.actualExpenses",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(ApdPreviousActivityTable) />,
              "className": "mb3",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(ApdPreviousActivityTableMMIS) />,
              "className": "mb3",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Subsection
            id="prev-activities-outline"
            nested={false}
            open={false}
            resource="previousActivities.outline"
          >
            <div
              className="mb-tiny bold"
            >
              Previous Activities Summary
            </div>
            <RichText
              content="previous"
              editorClassName="rte-textarea-l"
              onSync={[Function]}
            />
          </Subsection>,
          <Subsection
            id="prev-activities-table"
            nested={false}
            open={false}
            resource="previousActivities.actualExpenses"
          >
            <div
              className="mb3"
            >
              <Connect(ApdPreviousActivityTable) />
            </div>
            <div
              className="mb3"
            >
              <Connect(ApdPreviousActivityTableMMIS) />
            </div>
          </Subsection>,
        ],
        "id": "prev-activities",
        "resource": "previousActivities",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <div
                className="mb-tiny bold"
              >
                Previous Activities Summary
              </div>,
              <RichText
                content="previous"
                editorClassName="rte-textarea-l"
                onSync={[Function]}
              />,
            ],
            "id": "prev-activities-outline",
            "nested": false,
            "open": false,
            "resource": "previousActivities.outline",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Previous Activities Summary",
                "className": "mb-tiny bold",
              },
              "ref": null,
              "rendered": "Previous Activities Summary",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "content": "previous",
                "editorClassName": "rte-textarea-l",
                "onSync": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <div
                className="mb3"
              >
                <Connect(ApdPreviousActivityTable) />
              </div>,
              <div
                className="mb3"
              >
                <Connect(ApdPreviousActivityTableMMIS) />
              </div>,
            ],
            "id": "prev-activities-table",
            "nested": false,
            "open": false,
            "resource": "previousActivities.actualExpenses",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ApdPreviousActivityTable) />,
                "className": "mb3",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(ApdPreviousActivityTableMMIS) />,
                "className": "mb3",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
