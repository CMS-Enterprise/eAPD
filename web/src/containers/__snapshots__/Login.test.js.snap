// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`login component renders correctly if logged in previously but not logged in now (shows logout notice) 1`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={false}
    cancelable={false}
    className="ds-u-margin-top--7"
    error={null}
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success="You have securely logged out."
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage={null}
      errorMessage={null}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </withRouter(LoginForm)>
</main>
`;

exports[`login component renders correctly if not logged in and fetching data 1`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={false}
    cancelable={false}
    className="ds-u-margin-top--7"
    error={null}
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success={null}
    title="Log in"
    working={true}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage={null}
      errorMessage={null}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </withRouter(LoginForm)>
</main>
`;

exports[`login component renders correctly if not logged in and there is an error 1`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={false}
    cancelable={false}
    className="ds-u-margin-top--7"
    error="something here"
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success={null}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage="Invalid Entry"
      errorMessage="something here"
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </withRouter(LoginForm)>
</main>
`;

exports[`login component renders correctly if not logged in, and never logged in 1`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={false}
    cancelable={false}
    className="ds-u-margin-top--7"
    error={null}
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success={null}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage={null}
      errorMessage={null}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </withRouter(LoginForm)>
</main>
`;

exports[`login component renders correctly if not logged in, and never logged in 2`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={false}
    cancelable={false}
    className="ds-u-margin-top--7"
    error={null}
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success={null}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value="bob"
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage={null}
      errorMessage={null}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </withRouter(LoginForm)>
</main>
`;

exports[`login component renders correctly if not logged in, and never logged in 3`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={true}
    cancelable={false}
    className="ds-u-margin-top--7"
    error={null}
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success={null}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value="bob"
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage={null}
      errorMessage={null}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value="secret"
    />
  </withRouter(LoginForm)>
</main>
`;

exports[`login component renders correctly if user is not in correct Okta group 1`] = `
<main
  id="start-main-content"
>
  <UpgradeBrowser />
  <withRouter(LoginForm)
    canSubmit={false}
    cancelable={false}
    className="ds-u-margin-top--7"
    error={null}
    footer={
      <p
        className="ds-u-padding-top--2"
      >
        Forgot your password? Contact
         
        <a
          href="mailto:CMS-EAPD@cms.hhs.gov?subject=Password%20Recovery%20Request%20for%20eAPD"
        >
          CMS-EAPD@cms.hhs.gov
        </a>
      </p>
    }
    legend="Log in"
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    success={null}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter your EUA ID."
      id="username"
      label="EUA ID"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      className=""
      compareTo={Array []}
      customErrorMessage={null}
      errorMessage={null}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </withRouter(LoginForm)>
</main>
`;
