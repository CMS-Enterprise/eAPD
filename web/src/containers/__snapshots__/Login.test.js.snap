// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`login component renders correctly if logged in 1`] = `
<Redirect
  push={false}
  to="origin"
/>
`;

exports[`login component renders correctly if logged in and previous location is logout 1`] = `
<Redirect
  push={false}
  to="/logout"
/>
`;

exports[`login component renders correctly if logged in, but no previous location 1`] = `
<Redirect
  push={false}
  to={
    Object {
      "pathname": "/",
    }
  }
/>
`;

exports[`login component renders correctly if not logged in 1`] = `
<Fragment>
  <Connect(Header) />
  <CardForm
    error={false}
    legend=""
    onCancel={[Function]}
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    sectionName=""
    success={false}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter the email associated with this account."
      id="username"
      label="Email"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      compareTo={Array []}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </CardForm>
</Fragment>
`;

exports[`login component renders correctly if not logged in 2`] = `
<Fragment>
  <Connect(Header) />
  <CardForm
    error={false}
    legend=""
    onCancel={[Function]}
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    sectionName=""
    success={false}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter the email associated with this account."
      id="username"
      label="Email"
      name="username"
      onChange={[Function]}
      type="text"
      value="bob"
    />
    <Password
      compareTo={Array []}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </CardForm>
</Fragment>
`;

exports[`login component renders correctly if not logged in 3`] = `
<Fragment>
  <Connect(Header) />
  <CardForm
    error={false}
    legend=""
    onCancel={[Function]}
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    sectionName=""
    success={false}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter the email associated with this account."
      id="username"
      label="Email"
      name="username"
      onChange={[Function]}
      type="text"
      value="bob"
    />
    <Password
      compareTo={Array []}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value="secret"
    />
  </CardForm>
</Fragment>
`;

exports[`login component renders correctly if not logged in and fetching data 1`] = `
<Fragment>
  <Connect(Header) />
  <CardForm
    error={false}
    legend=""
    onCancel={[Function]}
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    sectionName=""
    success={false}
    title="Log in"
    working={true}
  >
    <TextField
      ariaLabel="Enter the email associated with this account."
      id="username"
      label="Email"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      compareTo={Array []}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </CardForm>
</Fragment>
`;

exports[`login component renders correctly if not logged in and there is an error 1`] = `
<Fragment>
  <Connect(Header) />
  <CardForm
    error={false}
    legend=""
    onCancel={[Function]}
    onSave={[Function]}
    primaryButtonText={
      Array [
        "Log in",
        "Logging in",
      ]
    }
    sectionName=""
    success={false}
    title="Log in"
    working={false}
  >
    <TextField
      ariaLabel="Enter the email associated with this account."
      id="username"
      label="Email"
      name="username"
      onChange={[Function]}
      type="text"
      value=""
    />
    <Password
      compareTo={Array []}
      onChange={[Function]}
      showMeter={false}
      title="Password"
      value=""
    />
  </CardForm>
</Fragment>
`;
