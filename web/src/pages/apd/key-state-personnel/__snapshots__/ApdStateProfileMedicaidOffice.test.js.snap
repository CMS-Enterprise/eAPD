// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`apd state profile, Medicaid office component renders correctly 1`] = `
<Fragment>
  <fieldset>
    <legend
      className="ds-u-padding-bottom--1"
    >
      Medicaid Director
    </legend>
    <Component
      control={
        Object {
          "_defaultValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_executeSchema": [Function],
          "_fields": Object {},
          "_formState": Object {
            "dirtyFields": Object {},
            "errors": Object {},
            "isDirty": false,
            "isSubmitSuccessful": false,
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": false,
            "isValidating": false,
            "submitCount": 0,
            "touchedFields": Object {},
          },
          "_formValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_getDirty": [Function],
          "_getFieldArray": [Function],
          "_getWatch": [Function],
          "_names": Object {
            "array": Set {},
            "mount": Set {},
            "unMount": Set {},
            "watch": Set {},
          },
          "_options": Object {
            "defaultValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "mode": "onBlur",
            "reValidateMode": "onBlur",
            "resolver": [Function],
            "shouldFocusError": true,
          },
          "_proxyFormState": Object {
            "dirtyFields": false,
            "errors": "all",
            "isDirty": false,
            "isValid": false,
            "isValidating": false,
            "touchedFields": false,
          },
          "_removeUnmounted": [Function],
          "_stateFlags": Object {
            "action": false,
            "mount": false,
            "watch": false,
          },
          "_subjects": Object {
            "array": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "state": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "watch": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
          },
          "_updateFieldArray": [Function],
          "_updateValid": [Function],
          "getFieldState": [Function],
          "register": [Function],
          "unregister": [Function],
        }
      }
      name="medicaidDirector.name"
      render={[Function]}
    />
    <Component
      control={
        Object {
          "_defaultValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_executeSchema": [Function],
          "_fields": Object {},
          "_formState": Object {
            "dirtyFields": Object {},
            "errors": Object {},
            "isDirty": false,
            "isSubmitSuccessful": false,
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": false,
            "isValidating": false,
            "submitCount": 0,
            "touchedFields": Object {},
          },
          "_formValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_getDirty": [Function],
          "_getFieldArray": [Function],
          "_getWatch": [Function],
          "_names": Object {
            "array": Set {},
            "mount": Set {},
            "unMount": Set {},
            "watch": Set {},
          },
          "_options": Object {
            "defaultValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "mode": "onBlur",
            "reValidateMode": "onBlur",
            "resolver": [Function],
            "shouldFocusError": true,
          },
          "_proxyFormState": Object {
            "dirtyFields": false,
            "errors": "all",
            "isDirty": false,
            "isValid": false,
            "isValidating": false,
            "touchedFields": false,
          },
          "_removeUnmounted": [Function],
          "_stateFlags": Object {
            "action": false,
            "mount": false,
            "watch": false,
          },
          "_subjects": Object {
            "array": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "state": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "watch": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
          },
          "_updateFieldArray": [Function],
          "_updateValid": [Function],
          "getFieldState": [Function],
          "register": [Function],
          "unregister": [Function],
        }
      }
      name="medicaidDirector.email"
      render={[Function]}
    />
    <Component
      control={
        Object {
          "_defaultValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_executeSchema": [Function],
          "_fields": Object {},
          "_formState": Object {
            "dirtyFields": Object {},
            "errors": Object {},
            "isDirty": false,
            "isSubmitSuccessful": false,
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": false,
            "isValidating": false,
            "submitCount": 0,
            "touchedFields": Object {},
          },
          "_formValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_getDirty": [Function],
          "_getFieldArray": [Function],
          "_getWatch": [Function],
          "_names": Object {
            "array": Set {},
            "mount": Set {},
            "unMount": Set {},
            "watch": Set {},
          },
          "_options": Object {
            "defaultValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "mode": "onBlur",
            "reValidateMode": "onBlur",
            "resolver": [Function],
            "shouldFocusError": true,
          },
          "_proxyFormState": Object {
            "dirtyFields": false,
            "errors": "all",
            "isDirty": false,
            "isValid": false,
            "isValidating": false,
            "touchedFields": false,
          },
          "_removeUnmounted": [Function],
          "_stateFlags": Object {
            "action": false,
            "mount": false,
            "watch": false,
          },
          "_subjects": Object {
            "array": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "state": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "watch": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
          },
          "_updateFieldArray": [Function],
          "_updateValid": [Function],
          "getFieldState": [Function],
          "register": [Function],
          "unregister": [Function],
        }
      }
      name="medicaidDirector.phone"
      render={[Function]}
    />
  </fieldset>
  <fieldset>
    <legend
      className="ds-u-padding-y--1"
    >
      Medicaid Office
    </legend>
    <Component
      control={
        Object {
          "_defaultValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_executeSchema": [Function],
          "_fields": Object {},
          "_formState": Object {
            "dirtyFields": Object {},
            "errors": Object {},
            "isDirty": false,
            "isSubmitSuccessful": false,
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": false,
            "isValidating": false,
            "submitCount": 0,
            "touchedFields": Object {},
          },
          "_formValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_getDirty": [Function],
          "_getFieldArray": [Function],
          "_getWatch": [Function],
          "_names": Object {
            "array": Set {},
            "mount": Set {},
            "unMount": Set {},
            "watch": Set {},
          },
          "_options": Object {
            "defaultValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "mode": "onBlur",
            "reValidateMode": "onBlur",
            "resolver": [Function],
            "shouldFocusError": true,
          },
          "_proxyFormState": Object {
            "dirtyFields": false,
            "errors": "all",
            "isDirty": false,
            "isValid": false,
            "isValidating": false,
            "touchedFields": false,
          },
          "_removeUnmounted": [Function],
          "_stateFlags": Object {
            "action": false,
            "mount": false,
            "watch": false,
          },
          "_subjects": Object {
            "array": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "state": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "watch": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
          },
          "_updateFieldArray": [Function],
          "_updateValid": [Function],
          "getFieldState": [Function],
          "register": [Function],
          "unregister": [Function],
        }
      }
      name="medicaidOffice.address1"
      render={[Function]}
    />
    <TextField
      hint="Optional"
      label="Address continued"
      name="medicaidOffice.address2"
      onChange={[Function]}
      type="text"
      value="address 2"
    />
    <div
      className="ds-l-row"
    >
      <Component
        control={
          Object {
            "_defaultValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "_executeSchema": [Function],
            "_fields": Object {},
            "_formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "submitCount": 0,
              "touchedFields": Object {},
            },
            "_formValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "_getDirty": [Function],
            "_getFieldArray": [Function],
            "_getWatch": [Function],
            "_names": Object {
              "array": Set {},
              "mount": Set {},
              "unMount": Set {},
              "watch": Set {},
            },
            "_options": Object {
              "defaultValues": Object {
                "medicaidDirector": Object {
                  "email": "email",
                  "name": "name",
                  "phone": "phone",
                },
                "medicaidOffice": Object {
                  "address1": "address 1",
                  "address2": "address 2",
                  "city": "city",
                  "state": "state",
                  "zip": "zip",
                },
              },
              "mode": "onBlur",
              "reValidateMode": "onBlur",
              "resolver": [Function],
              "shouldFocusError": true,
            },
            "_proxyFormState": Object {
              "dirtyFields": false,
              "errors": "all",
              "isDirty": false,
              "isValid": false,
              "isValidating": false,
              "touchedFields": false,
            },
            "_removeUnmounted": [Function],
            "_stateFlags": Object {
              "action": false,
              "mount": false,
              "watch": false,
            },
            "_subjects": Object {
              "array": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "state": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "watch": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
            },
            "_updateFieldArray": [Function],
            "_updateValid": [Function],
            "getFieldState": [Function],
            "register": [Function],
            "unregister": [Function],
          }
        }
        name="medicaidOffice.city"
        render={[Function]}
      />
      <div
        className="ds-u-clearfix ds-l-col--6"
      >
        <Dropdown
          id="apd-state-profile-state"
          label="State"
          name="medicaidOffice.state"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Alabama",
                "value": "AL",
              },
              Object {
                "label": "Alaska",
                "value": "AK",
              },
              Object {
                "label": "American Samoa",
                "value": "AS",
              },
              Object {
                "label": "Arizona",
                "value": "AZ",
              },
              Object {
                "label": "Arkansas",
                "value": "AR",
              },
              Object {
                "label": "California",
                "value": "CA",
              },
              Object {
                "label": "Colorado",
                "value": "CO",
              },
              Object {
                "label": "Connecticut",
                "value": "CT",
              },
              Object {
                "label": "Delaware",
                "value": "DE",
              },
              Object {
                "label": "District of Columbia",
                "value": "DC",
              },
              Object {
                "label": "Florida",
                "value": "FL",
              },
              Object {
                "label": "Georgia",
                "value": "GA",
              },
              Object {
                "label": "Guam",
                "value": "GU",
              },
              Object {
                "label": "Hawaii",
                "value": "HI",
              },
              Object {
                "label": "Idaho",
                "value": "ID",
              },
              Object {
                "label": "Illinois",
                "value": "IL",
              },
              Object {
                "label": "Indiana",
                "value": "IN",
              },
              Object {
                "label": "Iowa",
                "value": "IA",
              },
              Object {
                "label": "Kansas",
                "value": "KS",
              },
              Object {
                "label": "Kentucky",
                "value": "KY",
              },
              Object {
                "label": "Louisiana",
                "value": "LA",
              },
              Object {
                "label": "Maine",
                "value": "ME",
              },
              Object {
                "label": "Maryland",
                "value": "MD",
              },
              Object {
                "label": "Massachusetts",
                "value": "MA",
              },
              Object {
                "label": "Michigan",
                "value": "MI",
              },
              Object {
                "label": "Minnesota",
                "value": "MN",
              },
              Object {
                "label": "Mississippi",
                "value": "MS",
              },
              Object {
                "label": "Missouri",
                "value": "MO",
              },
              Object {
                "label": "Montana",
                "value": "MT",
              },
              Object {
                "label": "Nebraska",
                "value": "NE",
              },
              Object {
                "label": "Nevada",
                "value": "NV",
              },
              Object {
                "label": "New Hampshire",
                "value": "NH",
              },
              Object {
                "label": "New Jersey",
                "value": "NJ",
              },
              Object {
                "label": "New Mexico",
                "value": "NM",
              },
              Object {
                "label": "New York",
                "value": "NY",
              },
              Object {
                "label": "North Carolina",
                "value": "NC",
              },
              Object {
                "label": "North Dakota",
                "value": "ND",
              },
              Object {
                "label": "Northern Mariana Islands",
                "value": "MP",
              },
              Object {
                "label": "Ohio",
                "value": "OH",
              },
              Object {
                "label": "Oklahoma",
                "value": "OK",
              },
              Object {
                "label": "Oregon",
                "value": "OR",
              },
              Object {
                "label": "Pennsylvania",
                "value": "PA",
              },
              Object {
                "label": "Puerto Rico",
                "value": "PR",
              },
              Object {
                "label": "Rhode Island",
                "value": "RI",
              },
              Object {
                "label": "South Carolina",
                "value": "SC",
              },
              Object {
                "label": "South Dakota",
                "value": "SD",
              },
              Object {
                "label": "Tennessee",
                "value": "TN",
              },
              Object {
                "label": "Texas",
                "value": "TX",
              },
              Object {
                "label": "U.S. Virgin Islands",
                "value": "VI",
              },
              Object {
                "label": "Utah",
                "value": "UT",
              },
              Object {
                "label": "Vermont",
                "value": "VT",
              },
              Object {
                "label": "Virginia",
                "value": "VA",
              },
              Object {
                "label": "Washington",
                "value": "WA",
              },
              Object {
                "label": "West Virginia",
                "value": "WV",
              },
              Object {
                "label": "Wisconsin",
                "value": "WI",
              },
              Object {
                "label": "Wyoming",
                "value": "WY",
              },
            ]
          }
          value="state"
        />
      </div>
    </div>
    <Component
      control={
        Object {
          "_defaultValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_executeSchema": [Function],
          "_fields": Object {},
          "_formState": Object {
            "dirtyFields": Object {},
            "errors": Object {},
            "isDirty": false,
            "isSubmitSuccessful": false,
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": false,
            "isValidating": false,
            "submitCount": 0,
            "touchedFields": Object {},
          },
          "_formValues": Object {
            "medicaidDirector": Object {
              "email": "email",
              "name": "name",
              "phone": "phone",
            },
            "medicaidOffice": Object {
              "address1": "address 1",
              "address2": "address 2",
              "city": "city",
              "state": "state",
              "zip": "zip",
            },
          },
          "_getDirty": [Function],
          "_getFieldArray": [Function],
          "_getWatch": [Function],
          "_names": Object {
            "array": Set {},
            "mount": Set {},
            "unMount": Set {},
            "watch": Set {},
          },
          "_options": Object {
            "defaultValues": Object {
              "medicaidDirector": Object {
                "email": "email",
                "name": "name",
                "phone": "phone",
              },
              "medicaidOffice": Object {
                "address1": "address 1",
                "address2": "address 2",
                "city": "city",
                "state": "state",
                "zip": "zip",
              },
            },
            "mode": "onBlur",
            "reValidateMode": "onBlur",
            "resolver": [Function],
            "shouldFocusError": true,
          },
          "_proxyFormState": Object {
            "dirtyFields": false,
            "errors": "all",
            "isDirty": false,
            "isValid": false,
            "isValidating": false,
            "touchedFields": false,
          },
          "_removeUnmounted": [Function],
          "_stateFlags": Object {
            "action": false,
            "mount": false,
            "watch": false,
          },
          "_subjects": Object {
            "array": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "state": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
            "watch": Object {
              "next": [Function],
              "observers": Array [],
              "subscribe": [Function],
              "unsubscribe": [Function],
            },
          },
          "_updateFieldArray": [Function],
          "_updateValid": [Function],
          "getFieldState": [Function],
          "register": [Function],
          "unregister": [Function],
        }
      }
      name="medicaidOffice.zip"
      render={[Function]}
    />
  </fieldset>
</Fragment>
`;
