// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the OutcomeAndMetricForm component renders correctly 1`] = `
<form
  index={1}
  key="activity93-index1-form"
  onSubmit={[Function]}
>
  <Component
    control={
      Object {
        "_defaultValues": Object {
          "metrics": Array [
            Object {
              "key": "om key 1",
              "metric": "metric 1",
            },
            Object {
              "key": "om key 2",
              "metric": "metric 2",
            },
          ],
          "outcome": "outcome description",
        },
        "_executeSchema": [Function],
        "_fields": Object {},
        "_formState": Object {
          "dirtyFields": Object {},
          "errors": Object {},
          "isDirty": false,
          "isSubmitSuccessful": false,
          "isSubmitted": false,
          "isSubmitting": false,
          "isValid": false,
          "isValidating": false,
          "submitCount": 0,
          "touchedFields": Object {},
        },
        "_formValues": Object {
          "metrics": Array [
            Object {
              "key": "om key 1",
              "metric": "metric 1",
            },
            Object {
              "key": "om key 2",
              "metric": "metric 2",
            },
          ],
          "outcome": "outcome description",
        },
        "_getDirty": [Function],
        "_getFieldArray": [Function],
        "_getWatch": [Function],
        "_names": Object {
          "array": Set {
            "metrics",
          },
          "mount": Set {},
          "unMount": Set {},
          "watch": Set {},
        },
        "_options": Object {
          "defaultValues": Object {
            "metrics": Array [
              Object {
                "key": "om key 1",
                "metric": "metric 1",
              },
              Object {
                "key": "om key 2",
                "metric": "metric 2",
              },
            ],
            "outcome": "outcome description",
          },
          "mode": "onBlur",
          "reValidateMode": "onBlur",
          "resolver": [Function],
          "shouldFocusError": true,
        },
        "_proxyFormState": Object {
          "dirtyFields": false,
          "errors": "all",
          "isDirty": false,
          "isValid": "all",
          "isValidating": false,
          "touchedFields": false,
        },
        "_removeUnmounted": [Function],
        "_stateFlags": Object {
          "action": false,
          "mount": false,
          "watch": false,
        },
        "_subjects": Object {
          "array": Object {
            "next": [Function],
            "observers": Array [],
            "subscribe": [Function],
            "unsubscribe": [Function],
          },
          "state": Object {
            "next": [Function],
            "observers": Array [],
            "subscribe": [Function],
            "unsubscribe": [Function],
          },
          "watch": Object {
            "next": [Function],
            "observers": Array [],
            "subscribe": [Function],
            "unsubscribe": [Function],
          },
        },
        "_updateFieldArray": [Function],
        "_updateValid": [Function],
        "getFieldState": [Function],
        "register": [Function],
        "unregister": [Function],
      }
    }
    data-cy="outcome-1"
    key="activity93-index1"
    name="outcome"
    render={[Function]}
  />
  <Review
    ariaLabel="1. metric 1"
    editHref={null}
    key="om key 1"
    objType="Metric"
    onDeleteClick={[Function]}
    onDeleteLabel="Remove"
    onEditClick={null}
    skipConfirmation={true}
    title={null}
  >
    <div
      className="ds-c-choice__checkedChild ds-u-margin-top--3 ds-u-padding-top--0"
      key="om key 1"
    >
      <Component
        control={
          Object {
            "_defaultValues": Object {
              "metrics": Array [
                Object {
                  "key": "om key 1",
                  "metric": "metric 1",
                },
                Object {
                  "key": "om key 2",
                  "metric": "metric 2",
                },
              ],
              "outcome": "outcome description",
            },
            "_executeSchema": [Function],
            "_fields": Object {},
            "_formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "submitCount": 0,
              "touchedFields": Object {},
            },
            "_formValues": Object {
              "metrics": Array [
                Object {
                  "key": "om key 1",
                  "metric": "metric 1",
                },
                Object {
                  "key": "om key 2",
                  "metric": "metric 2",
                },
              ],
              "outcome": "outcome description",
            },
            "_getDirty": [Function],
            "_getFieldArray": [Function],
            "_getWatch": [Function],
            "_names": Object {
              "array": Set {
                "metrics",
              },
              "mount": Set {},
              "unMount": Set {},
              "watch": Set {},
            },
            "_options": Object {
              "defaultValues": Object {
                "metrics": Array [
                  Object {
                    "key": "om key 1",
                    "metric": "metric 1",
                  },
                  Object {
                    "key": "om key 2",
                    "metric": "metric 2",
                  },
                ],
                "outcome": "outcome description",
              },
              "mode": "onBlur",
              "reValidateMode": "onBlur",
              "resolver": [Function],
              "shouldFocusError": true,
            },
            "_proxyFormState": Object {
              "dirtyFields": false,
              "errors": "all",
              "isDirty": false,
              "isValid": "all",
              "isValidating": false,
              "touchedFields": false,
            },
            "_removeUnmounted": [Function],
            "_stateFlags": Object {
              "action": false,
              "mount": false,
              "watch": false,
            },
            "_subjects": Object {
              "array": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "state": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "watch": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
            },
            "_updateFieldArray": [Function],
            "_updateValid": [Function],
            "getFieldState": [Function],
            "register": [Function],
            "unregister": [Function],
          }
        }
        defaultValue="metric 1"
        name="metrics[0].metric"
        render={[Function]}
      />
    </div>
  </Review>
  <Review
    ariaLabel="2. metric 2"
    editHref={null}
    key="om key 2"
    objType="Metric"
    onDeleteClick={[Function]}
    onDeleteLabel="Remove"
    onEditClick={null}
    skipConfirmation={true}
    title={null}
  >
    <div
      className="ds-c-choice__checkedChild ds-u-margin-top--3 ds-u-padding-top--0"
      key="om key 2"
    >
      <Component
        control={
          Object {
            "_defaultValues": Object {
              "metrics": Array [
                Object {
                  "key": "om key 1",
                  "metric": "metric 1",
                },
                Object {
                  "key": "om key 2",
                  "metric": "metric 2",
                },
              ],
              "outcome": "outcome description",
            },
            "_executeSchema": [Function],
            "_fields": Object {},
            "_formState": Object {
              "dirtyFields": Object {},
              "errors": Object {},
              "isDirty": false,
              "isSubmitSuccessful": false,
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": false,
              "isValidating": false,
              "submitCount": 0,
              "touchedFields": Object {},
            },
            "_formValues": Object {
              "metrics": Array [
                Object {
                  "key": "om key 1",
                  "metric": "metric 1",
                },
                Object {
                  "key": "om key 2",
                  "metric": "metric 2",
                },
              ],
              "outcome": "outcome description",
            },
            "_getDirty": [Function],
            "_getFieldArray": [Function],
            "_getWatch": [Function],
            "_names": Object {
              "array": Set {
                "metrics",
              },
              "mount": Set {},
              "unMount": Set {},
              "watch": Set {},
            },
            "_options": Object {
              "defaultValues": Object {
                "metrics": Array [
                  Object {
                    "key": "om key 1",
                    "metric": "metric 1",
                  },
                  Object {
                    "key": "om key 2",
                    "metric": "metric 2",
                  },
                ],
                "outcome": "outcome description",
              },
              "mode": "onBlur",
              "reValidateMode": "onBlur",
              "resolver": [Function],
              "shouldFocusError": true,
            },
            "_proxyFormState": Object {
              "dirtyFields": false,
              "errors": "all",
              "isDirty": false,
              "isValid": "all",
              "isValidating": false,
              "touchedFields": false,
            },
            "_removeUnmounted": [Function],
            "_stateFlags": Object {
              "action": false,
              "mount": false,
              "watch": false,
            },
            "_subjects": Object {
              "array": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "state": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
              "watch": Object {
                "next": [Function],
                "observers": Array [],
                "subscribe": [Function],
                "unsubscribe": [Function],
              },
            },
            "_updateFieldArray": [Function],
            "_updateValid": [Function],
            "getFieldState": [Function],
            "register": [Function],
            "unregister": [Function],
          }
        }
        defaultValue="metric 2"
        name="metrics[1].metric"
        render={[Function]}
      />
    </div>
  </Review>
  <div
    className="align-content-right ds-u-margin-y--0 ds-u-margin-top--2"
    style={
      Object {
        "width": 485,
      }
    }
  >
    <Button
      className="ds-c-button ds-c-button--transparent"
      component="button"
      key="activity93-index1-add-metric"
      onClick={[Function]}
      type="button"
    >
      <FontAwesomeIcon
        border={false}
        className="ds-u-margin-right--1"
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              512,
              512,
              Array [],
              "f055",
              "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
            ],
            "iconName": "plus-circle",
            "prefix": "fas",
          }
        }
        inverse={false}
        listItem={false}
        mask={null}
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        swapOpacity={false}
        symbol={false}
        title=""
        transform={null}
      />
      Add Metric to Outcome
    </Button>
  </div>
  <input
    className="ds-u-visibility--hidden"
    hidden={true}
    type="submit"
  />
</form>
`;
