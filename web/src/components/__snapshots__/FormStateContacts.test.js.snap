// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the Form: state contacts component Contacts renders correctly when there was a submission error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Contacts
    fields={
      Object {
        "length": 0,
        "map": [Function],
        "push": [Function],
        "remove": [Function],
      }
    }
    meta={
      Object {
        "error": "test error message",
        "submitFailed": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <div
            className="mb2"
          >
            <SectionHeader>
              Contact #
              1
              :
            </SectionHeader>
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>
          </div>,
          <div
            className="mb2"
          >
            <SectionHeader>
              Contact #
              2
              :
            </SectionHeader>
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>
          </div>,
        ],
        <div>
          <button
            className="btn btn-primary bg-blue"
            onClick={[Function]}
            type="button"
          >
            Add another contact
          </button>
          <div>
            test error message
          </div>
        </div>,
      ],
      "className": "mt2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "[object Object]",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SectionHeader>
              Contact #
              1
              :
            </SectionHeader>,
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>,
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>,
          ],
          "className": "mb2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Contact #",
                1,
                ":",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Contact #",
              1,
              ":",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>,
              ],
              "className": "clearfix mxn1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Name",
                    "name": "[object Object].name",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Title",
                    "name": "[object Object].position",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Email address",
                    "name": "[object Object].email",
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Remove",
              "onClick": [Function],
              "title": "Remove Contact",
              "type": "button",
            },
            "ref": null,
            "rendered": "Remove",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "[object Object]",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SectionHeader>
              Contact #
              2
              :
            </SectionHeader>,
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>,
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>,
          ],
          "className": "mb2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Contact #",
                2,
                ":",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Contact #",
              2,
              ":",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>,
              ],
              "className": "clearfix mxn1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Name",
                    "name": "[object Object].name",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Title",
                    "name": "[object Object].position",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Email address",
                    "name": "[object Object].email",
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Remove",
              "onClick": [Function],
              "title": "Remove Contact",
              "type": "button",
            },
            "ref": null,
            "rendered": "Remove",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn btn-primary bg-blue"
              onClick={[Function]}
              type="button"
            >
              Add another contact
            </button>,
            <div>
              test error message
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add another contact",
              "className": "btn btn-primary bg-blue",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Add another contact",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test error message",
            },
            "ref": null,
            "rendered": "test error message",
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div
              className="mb2"
            >
              <SectionHeader>
                Contact #
                1
                :
              </SectionHeader>
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>
            </div>,
            <div
              className="mb2"
            >
              <SectionHeader>
                Contact #
                2
                :
              </SectionHeader>
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>
            </div>,
          ],
          <div>
            <button
              className="btn btn-primary bg-blue"
              onClick={[Function]}
              type="button"
            >
              Add another contact
            </button>
            <div>
              test error message
            </div>
          </div>,
        ],
        "className": "mt2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "[object Object]",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SectionHeader>
                Contact #
                1
                :
              </SectionHeader>,
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>,
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>,
            ],
            "className": "mb2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Contact #",
                  1,
                  ":",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Contact #",
                1,
                ":",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />
                  </div>,
                ],
                "className": "clearfix mxn1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Name",
                      "name": "[object Object].name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Title",
                      "name": "[object Object].position",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Email address",
                      "name": "[object Object].email",
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Remove",
                "onClick": [Function],
                "title": "Remove Contact",
                "type": "button",
              },
              "ref": null,
              "rendered": "Remove",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "[object Object]",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SectionHeader>
                Contact #
                2
                :
              </SectionHeader>,
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>,
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>,
            ],
            "className": "mb2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Contact #",
                  2,
                  ":",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Contact #",
                2,
                ":",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />
                  </div>,
                ],
                "className": "clearfix mxn1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Name",
                      "name": "[object Object].name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Title",
                      "name": "[object Object].position",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Email address",
                      "name": "[object Object].email",
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Remove",
                "onClick": [Function],
                "title": "Remove Contact",
                "type": "button",
              },
              "ref": null,
              "rendered": "Remove",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn btn-primary bg-blue"
                onClick={[Function]}
                type="button"
              >
                Add another contact
              </button>,
              <div>
                test error message
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add another contact",
                "className": "btn btn-primary bg-blue",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Add another contact",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test error message",
              },
              "ref": null,
              "rendered": "test error message",
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the Form: state contacts component Contacts renders correctly when there was no submission error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Contacts
    fields={
      Object {
        "length": 0,
        "map": [Function],
        "push": [Function],
        "remove": [Function],
      }
    }
    meta={
      Object {
        "error": "",
        "submitFailed": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <div
            className="mb2"
          >
            <SectionHeader>
              Contact #
              1
              :
            </SectionHeader>
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>
          </div>,
          <div
            className="mb2"
          >
            <SectionHeader>
              Contact #
              2
              :
            </SectionHeader>
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>
          </div>,
        ],
        <div>
          <button
            className="btn btn-primary bg-blue"
            onClick={[Function]}
            type="button"
          >
            Add another contact
          </button>
        </div>,
      ],
      "className": "mt2",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "[object Object]",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SectionHeader>
              Contact #
              1
              :
            </SectionHeader>,
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>,
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>,
          ],
          "className": "mb2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Contact #",
                1,
                ":",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Contact #",
              1,
              ":",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>,
              ],
              "className": "clearfix mxn1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Name",
                    "name": "[object Object].name",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Title",
                    "name": "[object Object].position",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Email address",
                    "name": "[object Object].email",
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Remove",
              "onClick": [Function],
              "title": "Remove Contact",
              "type": "button",
            },
            "ref": null,
            "rendered": "Remove",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "[object Object]",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <SectionHeader>
              Contact #
              2
              :
            </SectionHeader>,
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Name"
                  name="[object Object].name"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Title"
                  name="[object Object].position"
                />
              </div>
              <div
                className="col col-12 sm-col-4 px1"
              >
                <Field
                  component={[Function]}
                  label="Email address"
                  name="[object Object].email"
                  type="email"
                />
              </div>
            </div>,
            <button
              onClick={[Function]}
              title="Remove Contact"
              type="button"
            >
              Remove
            </button>,
          ],
          "className": "mb2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Contact #",
                2,
                ":",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Contact #",
              2,
              ":",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>,
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>,
              ],
              "className": "clearfix mxn1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Name",
                    "name": "[object Object].name",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Title",
                    "name": "[object Object].position",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />,
                  "className": "col col-12 sm-col-4 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Email address",
                    "name": "[object Object].email",
                    "type": "email",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Remove",
              "onClick": [Function],
              "title": "Remove Contact",
              "type": "button",
            },
            "ref": null,
            "rendered": "Remove",
            "type": "button",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              className="btn btn-primary bg-blue"
              onClick={[Function]}
              type="button"
            >
              Add another contact
            </button>,
            false,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add another contact",
              "className": "btn btn-primary bg-blue",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Add another contact",
            "type": "button",
          },
          false,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <div
              className="mb2"
            >
              <SectionHeader>
                Contact #
                1
                :
              </SectionHeader>
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>
            </div>,
            <div
              className="mb2"
            >
              <SectionHeader>
                Contact #
                2
                :
              </SectionHeader>
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>
            </div>,
          ],
          <div>
            <button
              className="btn btn-primary bg-blue"
              onClick={[Function]}
              type="button"
            >
              Add another contact
            </button>
          </div>,
        ],
        "className": "mt2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "[object Object]",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SectionHeader>
                Contact #
                1
                :
              </SectionHeader>,
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>,
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>,
            ],
            "className": "mb2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Contact #",
                  1,
                  ":",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Contact #",
                1,
                ":",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />
                  </div>,
                ],
                "className": "clearfix mxn1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Name",
                      "name": "[object Object].name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Title",
                      "name": "[object Object].position",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Email address",
                      "name": "[object Object].email",
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Remove",
                "onClick": [Function],
                "title": "Remove Contact",
                "type": "button",
              },
              "ref": null,
              "rendered": "Remove",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "[object Object]",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <SectionHeader>
                Contact #
                2
                :
              </SectionHeader>,
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Name"
                    name="[object Object].name"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Title"
                    name="[object Object].position"
                  />
                </div>
                <div
                  className="col col-12 sm-col-4 px1"
                >
                  <Field
                    component={[Function]}
                    label="Email address"
                    name="[object Object].email"
                    type="email"
                  />
                </div>
              </div>,
              <button
                onClick={[Function]}
                title="Remove Contact"
                type="button"
              >
                Remove
              </button>,
            ],
            "className": "mb2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Contact #",
                  2,
                  ":",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Contact #",
                2,
                ":",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />
                  </div>,
                  <div
                    className="col col-12 sm-col-4 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />
                  </div>,
                ],
                "className": "clearfix mxn1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Name"
                      name="[object Object].name"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Name",
                      "name": "[object Object].name",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Title"
                      name="[object Object].position"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Title",
                      "name": "[object Object].position",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Email address"
                      name="[object Object].email"
                      type="email"
                    />,
                    "className": "col col-12 sm-col-4 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Email address",
                      "name": "[object Object].email",
                      "type": "email",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Remove",
                "onClick": [Function],
                "title": "Remove Contact",
                "type": "button",
              },
              "ref": null,
              "rendered": "Remove",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn btn-primary bg-blue"
                onClick={[Function]}
                type="button"
              >
                Add another contact
              </button>,
              false,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add another contact",
                "className": "btn btn-primary bg-blue",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": "Add another contact",
              "type": "button",
            },
            false,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the Form: state contacts component FormStateContacts renders correctly when actively submitting 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormStateContacts
    handleSubmit={[Function]}
    stateName="test state name"
    submitting={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SectionHeader>
          We already have some information about 
          test state name
           from our records.
        </SectionHeader>,
        <SectionHeader>
          Medicaid office:
        </SectionHeader>,
        <FormSection
          component="div"
          name="medicaid_office"
        >
          <Field
            component={[Function]}
            label="Address"
            name="address1"
          />
          <Field
            component={[Function]}
            label="Address (continued)"
            name="address2"
          />
          <div
            className="clearfix mxn1"
          >
            <div
              className="col col-12 sm-col-6 px1"
            >
              <Field
                component={[Function]}
                label="City"
                name="city"
              />
            </div>
            <div
              className="col col-6 sm-col-3 px1"
            >
              <Field
                component={[Function]}
                label="State"
                name="state"
              />
            </div>
            <div
              className="col col-6 sm-col-3 px1"
            >
              <Field
                component={[Function]}
                label="Zip"
                name="zip"
              />
            </div>
          </div>
        </FormSection>,
        <SectionHeader>
          Medicaid Director:
        </SectionHeader>,
        <FormSection
          component="div"
          name="medicaid_office.director"
        >
          <Field
            component={[Function]}
            label="Name"
            name="name"
          />
          <Field
            component={[Function]}
            label="Email address"
            name="email"
          />
          <Field
            component={[Function]}
            label="Phone number"
            name="phone"
            pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
            type="tel"
          />
        </FormSection>,
        <FieldArray
          component={[Function]}
          name="state_pocs"
        />,
        <div
          className="mt3"
        >
          <button
            className="btn btn-primary bg-green"
            disabled={true}
            type="submit"
          >
            Saving
          </button>
        </div>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "We already have some information about ",
            "test state name",
            " from our records.",
          ],
        },
        "ref": null,
        "rendered": Array [
          "We already have some information about ",
          "test state name",
          " from our records.",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Medicaid office:",
        },
        "ref": null,
        "rendered": "Medicaid office:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              label="Address"
              name="address1"
            />,
            <Field
              component={[Function]}
              label="Address (continued)"
              name="address2"
            />,
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-6 px1"
              >
                <Field
                  component={[Function]}
                  label="City"
                  name="city"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="State"
                  name="state"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="Zip"
                  name="zip"
                />
              </div>
            </div>,
          ],
          "component": "div",
          "name": "medicaid_office",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Address",
              "name": "address1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Address (continued)",
              "name": "address2",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col col-12 sm-col-6 px1"
                >
                  <Field
                    component={[Function]}
                    label="City"
                    name="city"
                  />
                </div>,
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="State"
                    name="state"
                  />
                </div>,
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="Zip"
                    name="zip"
                  />
                </div>,
              ],
              "className": "clearfix mxn1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="City"
                    name="city"
                  />,
                  "className": "col col-12 sm-col-6 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "City",
                    "name": "city",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="State"
                    name="state"
                  />,
                  "className": "col col-6 sm-col-3 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "State",
                    "name": "state",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Zip"
                    name="zip"
                  />,
                  "className": "col col-6 sm-col-3 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Zip",
                    "name": "zip",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Medicaid Director:",
        },
        "ref": null,
        "rendered": "Medicaid Director:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              label="Name"
              name="name"
            />,
            <Field
              component={[Function]}
              label="Email address"
              name="email"
            />,
            <Field
              component={[Function]}
              label="Phone number"
              name="phone"
              pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
              type="tel"
            />,
          ],
          "component": "div",
          "name": "medicaid_office.director",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Name",
              "name": "name",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Email address",
              "name": "email",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Phone number",
              "name": "phone",
              "pattern": "[0-9]{3}-[0-9]{3}-[0-9]{4}",
              "type": "tel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "name": "state_pocs",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-primary bg-green"
            disabled={true}
            type="submit"
          >
            Saving
          </button>,
          "className": "mt3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Saving",
            "className": "btn btn-primary bg-green",
            "disabled": true,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Saving",
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SectionHeader>
            We already have some information about 
            test state name
             from our records.
          </SectionHeader>,
          <SectionHeader>
            Medicaid office:
          </SectionHeader>,
          <FormSection
            component="div"
            name="medicaid_office"
          >
            <Field
              component={[Function]}
              label="Address"
              name="address1"
            />
            <Field
              component={[Function]}
              label="Address (continued)"
              name="address2"
            />
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-6 px1"
              >
                <Field
                  component={[Function]}
                  label="City"
                  name="city"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="State"
                  name="state"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="Zip"
                  name="zip"
                />
              </div>
            </div>
          </FormSection>,
          <SectionHeader>
            Medicaid Director:
          </SectionHeader>,
          <FormSection
            component="div"
            name="medicaid_office.director"
          >
            <Field
              component={[Function]}
              label="Name"
              name="name"
            />
            <Field
              component={[Function]}
              label="Email address"
              name="email"
            />
            <Field
              component={[Function]}
              label="Phone number"
              name="phone"
              pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
              type="tel"
            />
          </FormSection>,
          <FieldArray
            component={[Function]}
            name="state_pocs"
          />,
          <div
            className="mt3"
          >
            <button
              className="btn btn-primary bg-green"
              disabled={true}
              type="submit"
            >
              Saving
            </button>
          </div>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "We already have some information about ",
              "test state name",
              " from our records.",
            ],
          },
          "ref": null,
          "rendered": Array [
            "We already have some information about ",
            "test state name",
            " from our records.",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Medicaid office:",
          },
          "ref": null,
          "rendered": "Medicaid office:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                label="Address"
                name="address1"
              />,
              <Field
                component={[Function]}
                label="Address (continued)"
                name="address2"
              />,
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-6 px1"
                >
                  <Field
                    component={[Function]}
                    label="City"
                    name="city"
                  />
                </div>
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="State"
                    name="state"
                  />
                </div>
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="Zip"
                    name="zip"
                  />
                </div>
              </div>,
            ],
            "component": "div",
            "name": "medicaid_office",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Address",
                "name": "address1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Address (continued)",
                "name": "address2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col col-12 sm-col-6 px1"
                  >
                    <Field
                      component={[Function]}
                      label="City"
                      name="city"
                    />
                  </div>,
                  <div
                    className="col col-6 sm-col-3 px1"
                  >
                    <Field
                      component={[Function]}
                      label="State"
                      name="state"
                    />
                  </div>,
                  <div
                    className="col col-6 sm-col-3 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Zip"
                      name="zip"
                    />
                  </div>,
                ],
                "className": "clearfix mxn1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="City"
                      name="city"
                    />,
                    "className": "col col-12 sm-col-6 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "City",
                      "name": "city",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="State"
                      name="state"
                    />,
                    "className": "col col-6 sm-col-3 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "State",
                      "name": "state",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Zip"
                      name="zip"
                    />,
                    "className": "col col-6 sm-col-3 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Zip",
                      "name": "zip",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Medicaid Director:",
          },
          "ref": null,
          "rendered": "Medicaid Director:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                label="Name"
                name="name"
              />,
              <Field
                component={[Function]}
                label="Email address"
                name="email"
              />,
              <Field
                component={[Function]}
                label="Phone number"
                name="phone"
                pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
                type="tel"
              />,
            ],
            "component": "div",
            "name": "medicaid_office.director",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Name",
                "name": "name",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Email address",
                "name": "email",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Phone number",
                "name": "phone",
                "pattern": "[0-9]{3}-[0-9]{3}-[0-9]{4}",
                "type": "tel",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "state_pocs",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-primary bg-green"
              disabled={true}
              type="submit"
            >
              Saving
            </button>,
            "className": "mt3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Saving",
              "className": "btn btn-primary bg-green",
              "disabled": true,
              "type": "submit",
            },
            "ref": null,
            "rendered": "Saving",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the Form: state contacts component FormStateContacts renders correctly when not actively submitting 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormStateContacts
    handleSubmit={[Function]}
    stateName="test state name"
    submitting={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SectionHeader>
          We already have some information about 
          test state name
           from our records.
        </SectionHeader>,
        <SectionHeader>
          Medicaid office:
        </SectionHeader>,
        <FormSection
          component="div"
          name="medicaid_office"
        >
          <Field
            component={[Function]}
            label="Address"
            name="address1"
          />
          <Field
            component={[Function]}
            label="Address (continued)"
            name="address2"
          />
          <div
            className="clearfix mxn1"
          >
            <div
              className="col col-12 sm-col-6 px1"
            >
              <Field
                component={[Function]}
                label="City"
                name="city"
              />
            </div>
            <div
              className="col col-6 sm-col-3 px1"
            >
              <Field
                component={[Function]}
                label="State"
                name="state"
              />
            </div>
            <div
              className="col col-6 sm-col-3 px1"
            >
              <Field
                component={[Function]}
                label="Zip"
                name="zip"
              />
            </div>
          </div>
        </FormSection>,
        <SectionHeader>
          Medicaid Director:
        </SectionHeader>,
        <FormSection
          component="div"
          name="medicaid_office.director"
        >
          <Field
            component={[Function]}
            label="Name"
            name="name"
          />
          <Field
            component={[Function]}
            label="Email address"
            name="email"
          />
          <Field
            component={[Function]}
            label="Phone number"
            name="phone"
            pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
            type="tel"
          />
        </FormSection>,
        <FieldArray
          component={[Function]}
          name="state_pocs"
        />,
        <div
          className="mt3"
        >
          <button
            className="btn btn-primary bg-green"
            disabled={true}
            type="submit"
          >
            Saving
          </button>
        </div>,
      ],
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            "We already have some information about ",
            "test state name",
            " from our records.",
          ],
        },
        "ref": null,
        "rendered": Array [
          "We already have some information about ",
          "test state name",
          " from our records.",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Medicaid office:",
        },
        "ref": null,
        "rendered": "Medicaid office:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              label="Address"
              name="address1"
            />,
            <Field
              component={[Function]}
              label="Address (continued)"
              name="address2"
            />,
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-6 px1"
              >
                <Field
                  component={[Function]}
                  label="City"
                  name="city"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="State"
                  name="state"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="Zip"
                  name="zip"
                />
              </div>
            </div>,
          ],
          "component": "div",
          "name": "medicaid_office",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Address",
              "name": "address1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Address (continued)",
              "name": "address2",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col col-12 sm-col-6 px1"
                >
                  <Field
                    component={[Function]}
                    label="City"
                    name="city"
                  />
                </div>,
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="State"
                    name="state"
                  />
                </div>,
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="Zip"
                    name="zip"
                  />
                </div>,
              ],
              "className": "clearfix mxn1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="City"
                    name="city"
                  />,
                  "className": "col col-12 sm-col-6 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "City",
                    "name": "city",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="State"
                    name="state"
                  />,
                  "className": "col col-6 sm-col-3 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "State",
                    "name": "state",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    label="Zip"
                    name="zip"
                  />,
                  "className": "col col-6 sm-col-3 px1",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "label": "Zip",
                    "name": "zip",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Medicaid Director:",
        },
        "ref": null,
        "rendered": "Medicaid Director:",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Field
              component={[Function]}
              label="Name"
              name="name"
            />,
            <Field
              component={[Function]}
              label="Email address"
              name="email"
            />,
            <Field
              component={[Function]}
              label="Phone number"
              name="phone"
              pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
              type="tel"
            />,
          ],
          "component": "div",
          "name": "medicaid_office.director",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Name",
              "name": "name",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Email address",
              "name": "email",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "label": "Phone number",
              "name": "phone",
              "pattern": "[0-9]{3}-[0-9]{3}-[0-9]{4}",
              "type": "tel",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "name": "state_pocs",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="btn btn-primary bg-green"
            disabled={true}
            type="submit"
          >
            Saving
          </button>,
          "className": "mt3",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Saving",
            "className": "btn btn-primary bg-green",
            "disabled": true,
            "type": "submit",
          },
          "ref": null,
          "rendered": "Saving",
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SectionHeader>
            We already have some information about 
            test state name
             from our records.
          </SectionHeader>,
          <SectionHeader>
            Medicaid office:
          </SectionHeader>,
          <FormSection
            component="div"
            name="medicaid_office"
          >
            <Field
              component={[Function]}
              label="Address"
              name="address1"
            />
            <Field
              component={[Function]}
              label="Address (continued)"
              name="address2"
            />
            <div
              className="clearfix mxn1"
            >
              <div
                className="col col-12 sm-col-6 px1"
              >
                <Field
                  component={[Function]}
                  label="City"
                  name="city"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="State"
                  name="state"
                />
              </div>
              <div
                className="col col-6 sm-col-3 px1"
              >
                <Field
                  component={[Function]}
                  label="Zip"
                  name="zip"
                />
              </div>
            </div>
          </FormSection>,
          <SectionHeader>
            Medicaid Director:
          </SectionHeader>,
          <FormSection
            component="div"
            name="medicaid_office.director"
          >
            <Field
              component={[Function]}
              label="Name"
              name="name"
            />
            <Field
              component={[Function]}
              label="Email address"
              name="email"
            />
            <Field
              component={[Function]}
              label="Phone number"
              name="phone"
              pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
              type="tel"
            />
          </FormSection>,
          <FieldArray
            component={[Function]}
            name="state_pocs"
          />,
          <div
            className="mt3"
          >
            <button
              className="btn btn-primary bg-green"
              disabled={true}
              type="submit"
            >
              Saving
            </button>
          </div>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "We already have some information about ",
              "test state name",
              " from our records.",
            ],
          },
          "ref": null,
          "rendered": Array [
            "We already have some information about ",
            "test state name",
            " from our records.",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Medicaid office:",
          },
          "ref": null,
          "rendered": "Medicaid office:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                label="Address"
                name="address1"
              />,
              <Field
                component={[Function]}
                label="Address (continued)"
                name="address2"
              />,
              <div
                className="clearfix mxn1"
              >
                <div
                  className="col col-12 sm-col-6 px1"
                >
                  <Field
                    component={[Function]}
                    label="City"
                    name="city"
                  />
                </div>
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="State"
                    name="state"
                  />
                </div>
                <div
                  className="col col-6 sm-col-3 px1"
                >
                  <Field
                    component={[Function]}
                    label="Zip"
                    name="zip"
                  />
                </div>
              </div>,
            ],
            "component": "div",
            "name": "medicaid_office",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Address",
                "name": "address1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Address (continued)",
                "name": "address2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col col-12 sm-col-6 px1"
                  >
                    <Field
                      component={[Function]}
                      label="City"
                      name="city"
                    />
                  </div>,
                  <div
                    className="col col-6 sm-col-3 px1"
                  >
                    <Field
                      component={[Function]}
                      label="State"
                      name="state"
                    />
                  </div>,
                  <div
                    className="col col-6 sm-col-3 px1"
                  >
                    <Field
                      component={[Function]}
                      label="Zip"
                      name="zip"
                    />
                  </div>,
                ],
                "className": "clearfix mxn1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="City"
                      name="city"
                    />,
                    "className": "col col-12 sm-col-6 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "City",
                      "name": "city",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="State"
                      name="state"
                    />,
                    "className": "col col-6 sm-col-3 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "State",
                      "name": "state",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      label="Zip"
                      name="zip"
                    />,
                    "className": "col col-6 sm-col-3 px1",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "label": "Zip",
                      "name": "zip",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Medicaid Director:",
          },
          "ref": null,
          "rendered": "Medicaid Director:",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Field
                component={[Function]}
                label="Name"
                name="name"
              />,
              <Field
                component={[Function]}
                label="Email address"
                name="email"
              />,
              <Field
                component={[Function]}
                label="Phone number"
                name="phone"
                pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"
                type="tel"
              />,
            ],
            "component": "div",
            "name": "medicaid_office.director",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Name",
                "name": "name",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Email address",
                "name": "email",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "label": "Phone number",
                "name": "phone",
                "pattern": "[0-9]{3}-[0-9]{3}-[0-9]{4}",
                "type": "tel",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "state_pocs",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-primary bg-green"
              disabled={true}
              type="submit"
            >
              Saving
            </button>,
            "className": "mt3",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Saving",
              "className": "btn btn-primary bg-green",
              "disabled": true,
              "type": "submit",
            },
            "ref": null,
            "rendered": "Saving",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
