// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SidebarLink component renders correctly if link is active 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarLink
    anchor={null}
    isActive={true}
  >
    link text
  </SidebarLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <a
        className="inline-block white text-decoration-none truncate"
        href="#!"
      >
        link text
      </a>,
      "className": "mb-tiny relative sb-item-active",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "link text",
        "className": "inline-block white text-decoration-none truncate",
        "href": "#!",
      },
      "ref": null,
      "rendered": "link text",
      "type": "a",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <a
          className="inline-block white text-decoration-none truncate"
          href="#!"
        >
          link text
        </a>,
        "className": "mb-tiny relative sb-item-active",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "link text",
          "className": "inline-block white text-decoration-none truncate",
          "href": "#!",
        },
        "ref": null,
        "rendered": "link text",
        "type": "a",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SidebarLink component renders correctly in the default case 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarLink
    anchor={null}
    isActive={false}
  >
    link text
  </SidebarLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <a
        className="inline-block white text-decoration-none truncate"
        href="#!"
      >
        link text
      </a>,
      "className": "mb-tiny relative ",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "link text",
        "className": "inline-block white text-decoration-none truncate",
        "href": "#!",
      },
      "ref": null,
      "rendered": "link text",
      "type": "a",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <a
          className="inline-block white text-decoration-none truncate"
          href="#!"
        >
          link text
        </a>,
        "className": "mb-tiny relative ",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "link text",
          "className": "inline-block white text-decoration-none truncate",
          "href": "#!",
        },
        "ref": null,
        "rendered": "link text",
        "type": "a",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`SidebarLink component renders link correctly if an anchor is given 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SidebarLink
    anchor="moop"
    isActive={false}
  >
    link text
  </SidebarLink>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <a
        className="inline-block white text-decoration-none truncate"
        href="#moop"
      >
        link text
      </a>,
      "className": "mb-tiny relative ",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "link text",
        "className": "inline-block white text-decoration-none truncate",
        "href": "#moop",
      },
      "ref": null,
      "rendered": "link text",
      "type": "a",
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <a
          className="inline-block white text-decoration-none truncate"
          href="#moop"
        >
          link text
        </a>,
        "className": "mb-tiny relative ",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "link text",
          "className": "inline-block white text-decoration-none truncate",
          "href": "#moop",
        },
        "ref": null,
        "rendered": "link text",
        "type": "a",
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
