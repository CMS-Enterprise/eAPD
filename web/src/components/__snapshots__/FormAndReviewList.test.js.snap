// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormAndReviewList component add button calls add event 1`] = `
<div
  className="form-and-review-list "
>
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={0}
    initialExpanded={false}
    item={
      Object {
        "key": "item 1",
      }
    }
    key="item 1"
    onDeleteClick={[Function]}
  />
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={1}
    initialExpanded={true}
    item={
      Object {
        "key": "item2",
      }
    }
    key="item2"
    onDeleteClick={[Function]}
  />
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component expands and collapses items 1`] = `
<FormAndReviewItem
  collapsedComponent={[Function]}
  expandedComponent={[Function]}
  extraButtons={Array []}
  index={1}
  initialExpanded={false}
  prop1="passed down"
  prop2="passed down"
  prop3="passed down"
>
  <div
    className="form-and-review-list--item__collapsed"
  >
    <Collapsed
      expand={[Function]}
      index={1}
      prop1="passed down"
      prop2="passed down"
      prop3="passed down"
    >
      <div />
    </Collapsed>
  </div>
</FormAndReviewItem>
`;

exports[`FormAndReviewList component expands and collapses items 2`] = `
<FormAndReviewItem
  collapsedComponent={[Function]}
  expandedComponent={[Function]}
  extraButtons={Array []}
  index={1}
  initialExpanded={false}
  prop1="passed down"
  prop2="passed down"
  prop3="passed down"
>
  <div
    className="form-and-review-list--item__expanded"
  >
    <Expanded
      collapse={[Function]}
      index={1}
      prop1="passed down"
      prop2="passed down"
      prop3="passed down"
    >
      <div />
    </Expanded>
    <Button
      component="button"
      onClick={[Function]}
      type="button"
      variation="primary"
    >
      <button
        className="ds-c-button ds-c-button--primary"
        onClick={[Function]}
        type="button"
      >
        Done
      </button>
    </Button>
  </div>
</FormAndReviewItem>
`;

exports[`FormAndReviewList component expands and collapses items 3`] = `
<FormAndReviewItem
  collapsedComponent={[Function]}
  expandedComponent={[Function]}
  extraButtons={Array []}
  index={1}
  initialExpanded={false}
  prop1="passed down"
  prop2="passed down"
  prop3="passed down"
>
  <div
    className="form-and-review-list--item__collapsed"
  >
    <Collapsed
      expand={[Function]}
      index={1}
      prop1="passed down"
      prop2="passed down"
      prop3="passed down"
    >
      <div />
    </Collapsed>
  </div>
</FormAndReviewItem>
`;

exports[`FormAndReviewList component handles extra buttons on list items passes extra buttons into the items, if provided 1`] = `
<div
  className="form-and-review-list "
>
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={
      Array [
        "button 1",
        "button 2",
      ]
    }
    index={0}
    initialExpanded={false}
    item={
      Object {
        "key": "key 1",
      }
    }
    key="key 1"
    onDeleteClick={null}
  />
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    Add another
  </Button>
</div>
`;

exports[`FormAndReviewList component handles extra buttons on list items renders any buttons passed in 1`] = `
<div
  className="form-and-review-list--item__expanded"
>
  <Expanded
    collapse={[Function]}
    index={1}
    initialCollapsed={false}
  />
  <Button
    component="button"
    onClick={[Function]}
    type="button"
    variation="primary"
  >
    Done
  </Button>
  <Button
    className="ds-u-margin-left--2"
    component="button"
    key="button 1"
    onClick={[Function]}
    type="button"
  >
    button 1
  </Button>
  <Button
    className="ds-u-margin-left--2"
    component="button"
    key="button 2"
    onClick={[Function]}
    type="button"
  >
    button 2
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly with a custom class name 1`] = `
<div
  className="form-and-review-list test-class"
>
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={0}
    initialExpanded={false}
    item={
      Object {
        "initialExpanded": false,
        "key": "one",
      }
    }
    key="one"
    onDeleteClick={[Function]}
  />
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={1}
    initialExpanded={false}
    item={
      Object {
        "initialExpanded": true,
        "key": "two",
      }
    }
    key="two"
    onDeleteClick={[Function]}
  />
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly with just one item 1`] = `
<div
  className="form-and-review-list "
>
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={0}
    initialExpanded={false}
    item={
      Object {
        "key": "one",
      }
    }
    key="one"
    onDeleteClick={null}
  />
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly with just one item and allowDeleteAll set to true 1`] = `
<div
  className="form-and-review-list "
>
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={0}
    initialExpanded={false}
    item={
      Object {
        "key": "one",
      }
    }
    key="one"
    onDeleteClick={[Function]}
  />
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly with multiple items 1`] = `
<div
  className="form-and-review-list "
>
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={0}
    initialExpanded={false}
    item={
      Object {
        "initialExpanded": false,
        "key": "one",
      }
    }
    key="one"
    onDeleteClick={[Function]}
  />
  <FormAndReviewItem
    collapsedComponent={[MockFunction]}
    expandedComponent={[MockFunction]}
    extraButtons={Array []}
    index={1}
    initialExpanded={false}
    item={
      Object {
        "initialExpanded": true,
        "key": "two",
      }
    }
    key="two"
    onDeleteClick={[Function]}
  />
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly with no items 1`] = `
<div
  className="form-and-review-list "
>
  <Alert
    headingLevel="3"
    role="region"
    variation="error"
  >
    displayed when there is no data
  </Alert>
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly with no items and noDataMessage set to false 1`] = `
<div
  className="form-and-review-list "
>
  <Button
    className="visibility--screen"
    component="button"
    onClick={[Function]}
    type="button"
  >
    text for adding a new button
  </Button>
</div>
`;

exports[`FormAndReviewList component renders properly without an add button if the onAddClick prop is missing 1`] = `
<div
  className="form-and-review-list "
>
  <Alert
    headingLevel="3"
    role="region"
    variation="error"
  >
    displayed when there is no data
  </Alert>
</div>
`;
