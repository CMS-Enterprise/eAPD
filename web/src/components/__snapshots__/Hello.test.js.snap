// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`the Hello component renders with a default name 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Hello
    name="Friend"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Hello 
          Friend
          !
        </h1>,
        <Styled(Box)
          kind="error"
        >
          <Subhead
            f={4}
            is="h3"
            m={0}
          >
            Hey-oh!
          </Subhead>
          <Measure>
            This is a fake alert :)
          </Measure>
        </Styled(Box)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Hello ",
            "Friend",
            "!",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Hello ",
          "Friend",
          "!",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Subhead
              f={4}
              is="h3"
              m={0}
            >
              Hey-oh!
            </Subhead>,
            <Measure>
              This is a fake alert :)
            </Measure>,
          ],
          "kind": "error",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Hey-oh!",
              "f": 4,
              "is": "h3",
              "m": 0,
            },
            "ref": null,
            "rendered": "Hey-oh!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "This is a fake alert :)",
            },
            "ref": null,
            "rendered": "This is a fake alert :)",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Hello 
            Friend
            !
          </h1>,
          <Styled(Box)
            kind="error"
          >
            <Subhead
              f={4}
              is="h3"
              m={0}
            >
              Hey-oh!
            </Subhead>
            <Measure>
              This is a fake alert :)
            </Measure>
          </Styled(Box)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Hello ",
              "Friend",
              "!",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Hello ",
            "Friend",
            "!",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Subhead
                f={4}
                is="h3"
                m={0}
              >
                Hey-oh!
              </Subhead>,
              <Measure>
                This is a fake alert :)
              </Measure>,
            ],
            "kind": "error",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Hey-oh!",
                "f": 4,
                "is": "h3",
                "m": 0,
              },
              "ref": null,
              "rendered": "Hey-oh!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This is a fake alert :)",
              },
              "ref": null,
              "rendered": "This is a fake alert :)",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`the Hello component renders with a provided name  1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Hello
    name="Test Person"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Hello 
          Test Person
          !
        </h1>,
        <Styled(Box)
          kind="error"
        >
          <Subhead
            f={4}
            is="h3"
            m={0}
          >
            Hey-oh!
          </Subhead>
          <Measure>
            This is a fake alert :)
          </Measure>
        </Styled(Box)>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Hello ",
            "Test Person",
            "!",
          ],
        },
        "ref": null,
        "rendered": Array [
          "Hello ",
          "Test Person",
          "!",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Subhead
              f={4}
              is="h3"
              m={0}
            >
              Hey-oh!
            </Subhead>,
            <Measure>
              This is a fake alert :)
            </Measure>,
          ],
          "kind": "error",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Hey-oh!",
              "f": 4,
              "is": "h3",
              "m": 0,
            },
            "ref": null,
            "rendered": "Hey-oh!",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "This is a fake alert :)",
            },
            "ref": null,
            "rendered": "This is a fake alert :)",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Hello 
            Test Person
            !
          </h1>,
          <Styled(Box)
            kind="error"
          >
            <Subhead
              f={4}
              is="h3"
              m={0}
            >
              Hey-oh!
            </Subhead>
            <Measure>
              This is a fake alert :)
            </Measure>
          </Styled(Box)>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Hello ",
              "Test Person",
              "!",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Hello ",
            "Test Person",
            "!",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Subhead
                f={4}
                is="h3"
                m={0}
              >
                Hey-oh!
              </Subhead>,
              <Measure>
                This is a fake alert :)
              </Measure>,
            ],
            "kind": "error",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Hey-oh!",
                "f": 4,
                "is": "h3",
                "m": 0,
              },
              "ref": null,
              "rendered": "Hey-oh!",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "This is a fake alert :)",
              },
              "ref": null,
              "rendered": "This is a fake alert :)",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
