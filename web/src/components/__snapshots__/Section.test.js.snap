// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Chunk component renders correctly with a resource with a subheader 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Chunk
    resource="activities.goals"
  >
    test child
  </Chunk>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="mb-tiny bold"
        >
          List the goals and objectives you're hoping to accomplish as part of this activity.
        </div>,
        <HelpText
          reminder="activities.goals.reminder"
          text="activities.goals.helpText"
        />,
        "test child",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "List the goals and objectives you're hoping to accomplish as part of this activity.",
          "className": "mb-tiny bold",
        },
        "ref": null,
        "rendered": "List the goals and objectives you're hoping to accomplish as part of this activity.",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "reminder": "activities.goals.reminder",
          "text": "activities.goals.helpText",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "test child",
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="mb-tiny bold"
          >
            List the goals and objectives you're hoping to accomplish as part of this activity.
          </div>,
          <HelpText
            reminder="activities.goals.reminder"
            text="activities.goals.helpText"
          />,
          "test child",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "List the goals and objectives you're hoping to accomplish as part of this activity.",
            "className": "mb-tiny bold",
          },
          "ref": null,
          "rendered": "List the goals and objectives you're hoping to accomplish as part of this activity.",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "reminder": "activities.goals.reminder",
            "text": "activities.goals.helpText",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "test child",
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Chunk component renders correctly with no resource 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Chunk
    resource={null}
  >
    test child
  </Chunk>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        false,
        <HelpText
          reminder="null.reminder"
          text="null.helpText"
        />,
        "test child",
      ],
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "reminder": "null.reminder",
          "text": "null.helpText",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "test child",
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          false,
          <HelpText
            reminder="null.reminder"
            text="null.helpText"
          />,
          "test child",
        ],
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "reminder": "null.reminder",
            "text": "null.helpText",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "test child",
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Section component renders correctly with no resource 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Section
    id={null}
    resource={null}
  >
    test child
  </Section>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        false,
        false,
        "test child",
      ],
      "className": "p2 sm-px3 border-bottom border-gray",
      "id": null,
    },
    "ref": null,
    "rendered": Array [
      false,
      false,
      false,
      "test child",
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          false,
          false,
          "test child",
        ],
        "className": "p2 sm-px3 border-bottom border-gray",
        "id": null,
      },
      "ref": null,
      "rendered": Array [
        false,
        false,
        false,
        "test child",
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Section component renders correctly with resource containing title, subheader, and helptext 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Section
    id={null}
    resource="activities.goals"
  >
    test child
  </Section>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <SectionTitle>
          Needs and Objectives
        </SectionTitle>,
        <div>
          List the goals and objectives you're hoping to accomplish as part of this activity.
        </div>,
        <SectionDesc>
          Include a brief description of how each goal relates to the vision identified in the program summary section.
        </SectionDesc>,
        "test child",
      ],
      "className": "p2 sm-px3 border-bottom border-gray",
      "id": null,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Needs and Objectives",
        },
        "ref": null,
        "rendered": "Needs and Objectives",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "List the goals and objectives you're hoping to accomplish as part of this activity.",
        },
        "ref": null,
        "rendered": "List the goals and objectives you're hoping to accomplish as part of this activity.",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Include a brief description of how each goal relates to the vision identified in the program summary section.",
        },
        "ref": null,
        "rendered": "Include a brief description of how each goal relates to the vision identified in the program summary section.",
        "type": [Function],
      },
      "test child",
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <SectionTitle>
            Needs and Objectives
          </SectionTitle>,
          <div>
            List the goals and objectives you're hoping to accomplish as part of this activity.
          </div>,
          <SectionDesc>
            Include a brief description of how each goal relates to the vision identified in the program summary section.
          </SectionDesc>,
          "test child",
        ],
        "className": "p2 sm-px3 border-bottom border-gray",
        "id": null,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Needs and Objectives",
          },
          "ref": null,
          "rendered": "Needs and Objectives",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "List the goals and objectives you're hoping to accomplish as part of this activity.",
          },
          "ref": null,
          "rendered": "List the goals and objectives you're hoping to accomplish as part of this activity.",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Include a brief description of how each goal relates to the vision identified in the program summary section.",
          },
          "ref": null,
          "rendered": "Include a brief description of how each goal relates to the vision identified in the program summary section.",
          "type": [Function],
        },
        "test child",
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Subsection component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Subsection
    isKey={false}
    open={false}
    resource={null}
  >
    test child
  </Subsection>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bgColor": "white",
      "children": <Chunk
        resource={null}
      >
        test child
      </Chunk>,
      "id": null,
      "onChange": null,
      "open": false,
      "sticky": false,
      "title": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "test child",
        "resource": null,
      },
      "ref": null,
      "rendered": "test child",
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bgColor": "white",
        "children": <Chunk
          resource={null}
        >
          test child
        </Chunk>,
        "id": null,
        "onChange": null,
        "open": false,
        "sticky": false,
        "title": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "test child",
          "resource": null,
        },
        "ref": null,
        "rendered": "test child",
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
