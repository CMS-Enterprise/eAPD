// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordWithmeter component renders with no props 1`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={false}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      value=""
    />
  </div>
</div>
`;

exports[`PasswordWithmeter component renders with various passwords 1`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={false}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      value="a"
    />
  </div>
</div>
`;

exports[`PasswordWithmeter component renders with various passwords 2`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={false}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      value="abCD"
    />
  </div>
</div>
`;

exports[`PasswordWithmeter component renders with various passwords 3`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={false}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      value="abCD321"
    />
  </div>
</div>
`;

exports[`PasswordWithmeter component renders with various passwords 4`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={false}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      value="abCD321!,"
    />
  </div>
</div>
`;

exports[`PasswordWithmeter component renders with various passwords 5`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={false}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="password"
      value="abCD321!,@_"
    />
  </div>
</div>
`;

exports[`PasswordWithmeter component shows the password 1`] = `
<div
  compareTo={Array []}
  onChange={[Function]}
>
  <div
    className="password-input"
  >
    <Choice
      checked={true}
      className="password-input--show-password ds-u-float--right"
      inputPlacement="left"
      name="show password"
      onChange={[Function]}
      size="small"
      type="checkbox"
      value="Show password"
    >
      Show password
    </Choice>
    <TextField
      className="no-clearfix"
      hint={false}
      label="Password"
      name="password"
      onChange={[Function]}
      type="text"
      value="abcd1234"
    />
  </div>
</div>
`;
