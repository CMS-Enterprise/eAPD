// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open-api endpoint | GET /open-api 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "activity": Object {
        "properties": Object {
          "alernatives": Object {
            "description": "Alternative considerations for the activity",
            "type": "string",
          },
          "contractorResources": Object {
            "items": Object {
              "description": "Activity contractor resource",
              "properties": Object {
                "description": Object {
                  "description": "Description",
                  "type": "string",
                },
                "end": Object {
                  "description": "When the contractor resource will end work; date only",
                  "format": "date-time",
                  "type": "string",
                },
                "files": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/file",
                  },
                  "type": "array",
                },
                "hourlyData": Object {
                  "items": Object {
                    "properties": Object {
                      "hours": Object {
                        "description": "Number of hours this contractor works/ed",
                        "type": "number",
                      },
                      "rates": Object {
                        "description": "Hourly rate for this contractor",
                        "type": "number",
                      },
                      "year": Object {
                        "description": "Year this hourly rate applies to",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "name": Object {
                  "description": "Name of the contractor resource",
                  "type": "string",
                },
                "start": Object {
                  "description": "When the contractor resource will begin work; date only",
                  "format": "date-time",
                  "type": "string",
                },
                "totalCost": Object {
                  "description": "Contractor resource total cost",
                  "type": "number",
                },
                "useHourly": Object {
                  "description": "Whether to use hourly rates for this contractor",
                  "type": "boolean",
                },
                "years": Object {
                  "items": Object {
                    "description": "Details of each year the contractor resource will be working",
                    "properties": Object {
                      "cost": Object {
                        "description": "Contractor resource cost of the year",
                        "type": "number",
                      },
                      "year": Object {
                        "description": "Year this detail applies to",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "costAllocation": Object {
            "items": Object {
              "properties": Object {
                "federalPercent": Object {
                  "description": "Federal share for this activity for this year, from 0 to 1",
                  "type": "number",
                },
                "otherAmount": Object {
                  "description": "Other amount (dollars) for this activity for this year",
                  "type": "number",
                },
                "statePercent": Object {
                  "description": "State share for this activity for this year, from 0 to 1",
                  "type": "number",
                },
                "year": Object {
                  "description": "Federal fiscal year this cost allocation applies to",
                  "type": "number",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "costAllocationNarrative": Object {
            "properties": Object {
              "methodology": Object {
                "description": "Description of the cost allocation methodology",
                "type": "string",
              },
              "otherSources": Object {
                "description": "Description of other funding sources",
                "type": "string",
              },
            },
            "type": "object",
          },
          "description": Object {
            "description": "Activity description",
            "type": "string",
          },
          "expenses": Object {
            "items": Object {
              "description": "Activity expense",
              "properties": Object {
                "category": Object {
                  "description": "Expense category, such as \\"Hardware, software, and licensing\\"",
                  "type": "string",
                },
                "description": Object {
                  "description": "Short description of the expense",
                  "type": "string",
                },
                "entries": Object {
                  "items": Object {
                    "description": "Expense entry",
                    "properties": Object {
                      "amount": Object {
                        "description": "Expense entry amount",
                        "type": "number",
                      },
                      "year": Object {
                        "description": "Expense entry year",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "files": Object {
            "items": Object {
              "$ref": "#/components/schemas/file",
            },
            "type": "array",
          },
          "fundingSource": Object {
            "description": "Federal funding source that applies to this activity",
            "type": "string",
          },
          "goals": Object {
            "items": Object {
              "description": "Activity goal",
              "properties": Object {
                "description": Object {
                  "description": "Goal description",
                  "type": "string",
                },
                "objective": Object {
                  "description": "Goal objective",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "id": Object {
            "description": "Activity globally-unique ID",
            "type": "number",
          },
          "name": Object {
            "description": "Activity name, unique within an APD",
            "type": "string",
          },
          "plannedEndDate": Object {
            "description": "The date this activity is planned to begin",
            "format": "date-time",
            "type": "string",
          },
          "plannedStartDate": Object {
            "description": "The date this activity is planned to be completed",
            "format": "date-time",
            "type": "string",
          },
          "quarterlyFFP": Object {
            "items": Object {
              "description": "Federal share of this activity cost, by expense type, per fiscal quarter",
              "properties": Object {
                "q1": Object {
                  "description": "First fiscal quarter FFP",
                  "properties": Object {
                    "combined": Object {
                      "description": "Percent of the federal share of the FFY total to be paid in this quarter",
                      "type": "number",
                    },
                    "contractors": Object {
                      "description": "Percent of the federal share of the FFY total contractor expense to be paid in this quarter",
                      "type": "number",
                    },
                    "state": Object {
                      "description": "Percent of the federal share of the FFY total state expense to be paid in this quarter",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "q2": Object {
                  "description": "Second fiscal quarter FFP",
                  "properties": Object {
                    "combined": Object {
                      "description": "Percent of the federal share of the FFY total to be paid in this quarter",
                      "type": "number",
                    },
                    "contractors": Object {
                      "description": "Percent of the federal share of the FFY total contractor expense to be paid in this quarter",
                      "type": "number",
                    },
                    "state": Object {
                      "description": "Percent of the federal share of the FFY total state expense to be paid in this quarter",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "q3": Object {
                  "description": "Third fiscal quarter FFP",
                  "properties": Object {
                    "combined": Object {
                      "description": "Percent of the federal share of the FFY total to be paid in this quarter",
                      "type": "number",
                    },
                    "contractors": Object {
                      "description": "Percent of the federal share of the FFY total contractor expense to be paid in this quarter",
                      "type": "number",
                    },
                    "state": Object {
                      "description": "Percent of the federal share of the FFY total state expense to be paid in this quarter",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "q4": Object {
                  "description": "Fourth fiscal quarter FFP",
                  "properties": Object {
                    "combined": Object {
                      "description": "Percent of the federal share of the FFY total to be paid in this quarter",
                      "type": "number",
                    },
                    "contractors": Object {
                      "description": "Percent of the federal share of the FFY total contractor expense to be paid in this quarter",
                      "type": "number",
                    },
                    "state": Object {
                      "description": "Percent of the federal share of the FFY total state expense to be paid in this quarter",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "year": Object {
                  "description": "Federal fiscal year this quarterly FFP applies to",
                  "type": "number",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "schedule": Object {
            "items": Object {
              "description": "Activity schedule item",
              "properties": Object {
                "endDate": Object {
                  "description": "The date this milestone is planned to be met",
                  "format": "date-time",
                  "type": "string",
                },
                "milestone": Object {
                  "description": "The name of the milestone this schedule entry refers to",
                  "type": "string",
                },
                "status": Object {
                  "description": "The status of the milestone",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "standardsAndConditions": Object {
            "type": "object",
          },
          "statePersonnel": Object {
            "items": Object {
              "properties": Object {
                "description": Object {
                  "description": "Description of the role",
                  "type": "string",
                },
                "keyPersonnel": Object {
                  "description": "\\"Key Personnel\\" designation",
                  "type": "boolean",
                },
                "title": Object {
                  "description": "Title for the state personnel",
                  "type": "string",
                },
                "years": Object {
                  "items": Object {
                    "properties": Object {
                      "cost": Object {
                        "description": "This personnel's cost for the given federal fiscal year",
                        "type": "number",
                      },
                      "fte": Object {
                        "description": "Percent of time this personnel is dedicating to the activity",
                        "type": "number",
                      },
                      "year": Object {
                        "description": "Federal fiscal year this information applies to",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "summary": Object {
            "description": "Short summary of the activity",
            "type": "string",
          },
        },
        "type": "object",
      },
      "apd": Object {
        "properties": Object {
          "activities": Object {
            "items": Object {
              "$ref": "#/components/schemas/activity",
            },
            "type": "array",
          },
          "federalCitations": Object {
            "description": "Federal citations that states must assert compliance with. This is a free-form object.",
            "type": "object",
          },
          "id": Object {
            "description": "APD ID",
            "type": "number",
          },
          "incentivePayments": Object {
            "items": Object {
              "properties": Object {
                "q1": Object {
                  "$ref": "#/components/schemas/incentivePaymentQuarter",
                },
                "q2": Object {
                  "$ref": "#/components/schemas/incentivePaymentQuarter",
                },
                "q3": Object {
                  "$ref": "#/components/schemas/incentivePaymentQuarter",
                },
                "q4": Object {
                  "$ref": "#/components/schemas/incentivePaymentQuarter",
                },
                "year": Object {},
              },
              "type": "object",
            },
            "type": "array",
          },
          "keyPersonnel": Object {
            "items": Object {
              "properties": Object {
                "costs": Object {
                  "items": Object {
                    "properties": Object {
                      "cost": Object {
                        "description": "Person's cost for the given year",
                        "type": "number",
                      },
                      "year": Object {
                        "description": "Federal fiscal year this cost is attributable to",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "email": Object {
                  "description": "Person's email address",
                  "type": "string",
                },
                "hasCosts": Object {
                  "description": "Whether the person has costs attributable to the project",
                  "type": "boolean",
                },
                "id": Object {
                  "type": "number",
                },
                "isPrimary": Object {
                  "description": "Whether the person is the primary point of contact for the APD",
                  "type": "boolean",
                },
                "name": Object {
                  "description": "Person's name",
                  "type": "string",
                },
                "percentTime": Object {
                  "description": "Percent of this person's time dedicated to the project, as a faction between 0 and 1.",
                  "maximum": 1,
                  "minimum": 0,
                  "type": "number",
                },
                "position": Object {
                  "description": "Person's position",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "narrativeHIE": Object {
            "description": "Brief description of HIE-funded activities contained in this APD",
            "type": "string",
          },
          "narrativeHIT": Object {
            "description": "Brief description of HIT-funded activities contained in this APD",
            "type": "string",
          },
          "narrativeMMIS": Object {
            "description": "Brief description of MMIS-funded activities contained in this APD",
            "type": "string",
          },
          "previousActivityExpenses": Object {
            "items": Object {
              "properties": Object {
                "hie": Object {
                  "description": "HIE-funded expenses",
                  "properties": Object {
                    "federalActual": Object {
                      "description": "Total federal share actually spent",
                      "type": "number",
                    },
                    "federalApproved": Object {
                      "description": "Total federal share approved in the previous APD",
                      "type": "number",
                    },
                    "stateActual": Object {
                      "description": "Total state share actually spent",
                      "type": "number",
                    },
                    "stateApproved": Object {
                      "description": "Total state share approved in the previous APD",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "hit": Object {
                  "description": "HIT-funded expenses",
                  "properties": Object {
                    "federalActual": Object {
                      "description": "Total federal share actually spent",
                      "type": "number",
                    },
                    "federalApproved": Object {
                      "description": "Total federal share approved in the previous APD",
                      "type": "number",
                    },
                    "stateActual": Object {
                      "description": "Total state share actually spent",
                      "type": "number",
                    },
                    "stateApproved": Object {
                      "description": "Total state share approved in the previous APD",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "mmis": Object {
                  "description": "HIT-funded expenses",
                  "properties": Object {
                    "federal50Actual": Object {
                      "description": "Total federal 50% share actually spent",
                      "type": "number",
                    },
                    "federal50Approved": Object {
                      "description": "Total federal 50% share approved in the previous APD",
                      "type": "number",
                    },
                    "federal75Actual": Object {
                      "description": "Total federal 75% share actually spent",
                      "type": "number",
                    },
                    "federal75Approved": Object {
                      "description": "Total federal 75% share approved in the previous APD",
                      "type": "number",
                    },
                    "federal90Actual": Object {
                      "description": "Total federal 90% share actually spent",
                      "type": "number",
                    },
                    "federal90Approved": Object {
                      "description": "Total federal 90% share approved in the previous APD",
                      "type": "number",
                    },
                    "state10Actual": Object {
                      "description": "Total state 10% share actually spent",
                      "type": "number",
                    },
                    "state10Approved": Object {
                      "description": "Total state 10% share approved in the previous APD",
                      "type": "number",
                    },
                    "state25Actual": Object {
                      "description": "Total state 25% share actually spent",
                      "type": "number",
                    },
                    "state25Approved": Object {
                      "description": "Total state 25% share approved in the previous APD",
                      "type": "number",
                    },
                    "state50Actual": Object {
                      "description": "Total state 50% share actually spent",
                      "type": "number",
                    },
                    "state50Approved": Object {
                      "description": "Total state 50% share approved in the previous APD",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "year": Object {
                  "description": "Federal fiscal year this information applies to",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "previousActivitySummary": Object {
            "description": "High-level outline of activities approved in previous APD",
            "type": "string",
          },
          "programOverview": Object {
            "description": "An overview of the overall program",
            "type": "string",
          },
          "stateProfile": Object {
            "description": "The state profile for this specific APD",
            "properties": Object {
              "medicaidDirector": Object {
                "properties": Object {
                  "email": Object {
                    "description": "State Medicaid director's email address",
                    "type": "string",
                  },
                  "name": Object {
                    "description": "State Medicaid director's name",
                    "type": "string",
                  },
                  "phone": Object {
                    "description": "State Medicaid director's phone number",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "medicaidOffice": Object {
                "properties": Object {
                  "address1": Object {
                    "description": "State Medicaid office address",
                    "type": "string",
                  },
                  "address2": Object {
                    "description": "State Medicaid office address",
                    "type": "string",
                  },
                  "city": Object {
                    "description": "State Medicaid office address city",
                    "type": "string",
                  },
                  "state": Object {
                    "description": "State Medicaid office address state",
                    "type": "string",
                  },
                  "zip": Object {
                    "description": "State Medicaid office address ZIP code",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "status": Object {
            "description": "Status",
            "type": "string",
          },
          "years": Object {
            "items": Object {
              "type": "number",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
      "file": Object {
        "description": "Files associated with the activity",
        "properties": Object {
          "id": Object {
            "type": "number",
          },
          "metadata": Object {
            "description": "The properties from any metadata supplied when the file was uploaded will be added to the file object",
            "type": "object",
          },
          "size": Object {
            "description": "Size of the file, in bytes",
            "type": "number",
          },
        },
        "type": "object",
      },
      "incentivePaymentQuarter": Object {
        "properties": Object {
          "ehCount": Object {
            "type": "number",
          },
          "ehPayment": Object {
            "type": "number",
          },
          "epCount": Object {
            "type": "number",
          },
          "epPayment": Object {
            "type": "number",
          },
        },
        "type": "object",
      },
      "state": Object {
        "properties": Object {
          "id": Object {
            "description": "State, territory, or district ID (2-letter abbreviation, lowercase)",
            "type": "string",
          },
          "medicaid_office": Object {
            "description": "Address of the state, territory, or district Medicaid office",
            "properties": Object {
              "address": Object {
                "description": "Street address",
                "type": "string",
              },
              "city": Object {
                "description": "City",
                "type": "string",
              },
              "zip": Object {
                "description": "ZIP code",
                "type": "string",
              },
            },
            "type": "object",
          },
          "name": Object {
            "description": "State, territory, or district name",
            "type": "string",
          },
          "program_benefits": Object {
            "description": "Planned benefits of the program",
            "type": "string",
          },
          "program_vision": Object {
            "description": "Program vision statement",
            "type": "string",
          },
          "state_pocs": Object {
            "items": Object {
              "description": "A list of points of contact for the state, territory, or district",
              "properties": Object {
                "email": Object {
                  "description": "Point of contact's email address",
                  "type": "string",
                },
                "name": Object {
                  "description": "Point of contact's name",
                  "type": "string",
                },
                "position": Object {
                  "description": "Point of contact's position in the state, territory, or district",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
    },
    "securitySchemes": Object {
      "sessionCookie": Object {
        "in": "cookie",
        "name": "session",
        "type": "apiKey",
      },
    },
  },
  "info": Object {
    "description": "The API for the CMS HITECH APD app.",
    "title": "CMS HITECH APD API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/apds": Object {
      "get": Object {
        "description": "Get a list of all apds associated with requesting user",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "description": "APD ID",
                        "type": "number",
                      },
                      "years": Object {
                        "items": Object {
                          "type": "number",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of a user’s apds",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Get all of the APDs available to the user",
        "tags": Array [
          "APDs",
        ],
      },
      "post": Object {
        "description": "Create a new draft APD for the current user's state",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The new APD",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Create a new draft APD associated with the user's state",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/apds/submitted": Object {
      "get": Object {
        "description": "Get a list of all submitted APDs known to the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/apd",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of submitted APDs",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Get all of the submitted APDs (i.e., not draft)",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/apds/{id}": Object {
      "get": Object {
        "description": "Where the /apds GET method only returns a small portion of all APDs, this method returns all of one",
        "parameters": Array [
          Object {
            "description": "The ID of the apd to get",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The APD",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds for the user",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Get a single, complete APD",
        "tags": Array [
          "APDs",
        ],
      },
      "put": Object {
        "description": "Update an APD in the system.  If state profile information is included, the profile information is also updated for the user's state.",
        "parameters": Array [
          Object {
            "description": "The ID of the apd to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/apd",
              },
            },
          },
          "description": "The new values for the apd.  All fields are optional.",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The update was successful",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds for the user",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Update a specific APD",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/apds/{id}/status": Object {
      "put": Object {
        "description": "An endpoint for CMS analysts to change an APD status after it has been submitted.  The APD cannot currently be in draft status, or else this method will fail with an HTTP 400 error.",
        "parameters": Array [
          Object {
            "description": "The ID of the APD to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "status": Object {
                    "description": "New status to set",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "The status value to set",
          "required": true,
        },
        "responses": Object {
          "204": Object {
            "description": "The APD status was successfully set",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The APD is currently in draft, or the selected status is invalid",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Set an APD status",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/apds/{id}/versions": Object {
      "delete": Object {
        "description": "Withdraws a previous submitted APD and makes it editable again",
        "parameters": Array [
          Object {
            "description": "The ID of the APD to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The withdrawal was successful",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Withdraw a submitted APD",
        "tags": Array [
          "APDs",
        ],
      },
      "post": Object {
        "description": "Create a new saved version of an APD and makes the APD non-draft so it cannot be edited",
        "parameters": Array [
          Object {
            "description": "The ID of the APD to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "tables": Object {
                    "description": "Computed data tables",
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "Additional data to save with the APD.  For example, computed values that the state has certified.",
          "required": false,
        },
        "responses": Object {
          "204": Object {
            "description": "The save was successful",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The APD is not currently in draft status, so it cannot be saved. Error is { error: \\"apd-not-editable\\" }",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Save a submitted version of a specific APD",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/auth/activities": Object {
      "get": Object {
        "description": "Get a list of all activities in the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "description": "Activity ID",
                        "type": "number",
                      },
                      "name": Object {
                        "description": "Activity name",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of activities known to the system",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the list of all activities",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/login": Object {
      "post": Object {
        "description": "Authenticate a user against the local database",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "password": Object {
                    "type": "string",
                  },
                  "username": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "description": "Successful login",
            "headers": Object {
              "Set-Cookie": Object {
                "schema": Object {
                  "example": "session=session-data; path=/; expires=Sat, 1 Jan 2035 12:00:00 GMT; httponly",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "description": "Missing username or password",
          },
          "401": Object {
            "description": "Unsuccessful login",
          },
        },
        "summary": "Logs a user in",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/logout": Object {
      "get": Object {
        "description": "Logs the user out by invalidating the session cookie",
        "responses": Object {
          "200": Object {
            "description": "Clears the session cookie",
            "headers": Object {
              "Set-Cookie": Object {
                "schema": Object {
                  "example": "session=; expires=; httponly",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "Logs the current user out",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/roles": Object {
      "get": Object {
        "description": "Get a list of all roles in the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "activities": Object {
                        "items": Object {
                          "description": "Activity name",
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "id": Object {
                        "description": "Role ID",
                        "type": "number",
                      },
                      "name": Object {
                        "description": "Role name",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of roles known to the system",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the list of all roles",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
      "post": Object {
        "description": "Create a new role",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "activities": Object {
                    "description": "List of activities to associate with this role; this list is definitive and after this operation, only the activities in this list will be associated with the role",
                    "items": Object {
                      "description": "An activity ID",
                      "type": "number",
                    },
                    "type": "array",
                  },
                  "name": Object {
                    "description": "The new role name. Must be unique.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "The new values for the new role",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "activities": Object {
                      "items": Object {
                        "description": "Activity name",
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "id": Object {
                      "description": "Role ID",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "Role name",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The newly-created role object",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The body of the request is invalid: there are no activities defined, some activities are not numeric, or some activities do not exist",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Creates a new role",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/roles/{id}": Object {
      "delete": Object {
        "description": "Remove the associations between a role and activities, and delete the role",
        "parameters": Array [
          Object {
            "description": "The ID of the role to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The role was deleted successfully",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The role ID does not match any known roles",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Deletes a role",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
      "put": Object {
        "description": "Change which activities an existing role is associated with",
        "parameters": Array [
          Object {
            "description": "The ID of the role to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "activities": Object {
                    "description": "List of activities to associate with this role; this list is definitive and after this operation, only the activities in this list will be associated with the role",
                    "items": Object {
                      "description": "An activity ID",
                      "type": "number",
                    },
                    "type": "array",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "The new values for the role",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "description": "The activities now associated with the role",
                    "type": "number",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The update was successful",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The body of the request is invalid: there are no activities defined, some activities are not numeric, or some activities do not exist",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The role ID does not match any known roles",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Sets the activities for a role",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/files/contractor/{id}": Object {
      "post": Object {
        "description": "Uploads a file and attaches it to a contractor resource, if the user has permission to modify the APD the contractor is attached to",
        "parameters": Array [
          Object {
            "description": "The ID of the contractor resource to attach this file to",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "multipart/form-data": Object {
              "schema": Object {
                "properties": Object {
                  "file": Object {
                    "description": "The file being uploaded",
                    "format": "binary",
                    "type": "string",
                  },
                  "metadata": Object {
                    "description": "The metadata to attach to this file. Must be stringified-JSON.",
                    "type": "string",
                  },
                },
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/file",
                },
              },
            },
            "description": "The file metadata stored in the database",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Upload a file",
        "tags": Array [
          "Files",
        ],
      },
    },
    "/files/contractor/{id}/{fileID}": Object {
      "delete": Object {
        "description": "Deletes a file associated with a contractor resource, if the user has permission to modify the APD the contractor is attached to",
        "parameters": Array [
          Object {
            "description": "The ID of the contractor resource to delete this file from",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
          Object {
            "description": "The ID of the file to delete",
            "in": "path",
            "name": "fileID",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The file is deleted successfully",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The contractor ID is not found",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Delete a file",
        "tags": Array [
          "Files",
        ],
      },
    },
    "/files/{id}": Object {
      "get": Object {
        "description": "Downloads the specified file if it exists and the user has permission",
        "parameters": Array [
          Object {
            "description": "The ID of the file to download",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "*/*": Object {
                "schema": Object {
                  "format": "binary",
                  "type": "string",
                },
              },
            },
            "description": "The file",
          },
          "400": Object {
            "description": "The provided file ID was invalid",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The file ID does not match any known files, or the file does not exist in storage",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Downloads a file",
        "tags": Array [
          "Files",
        ],
      },
    },
    "/me": Object {
      "get": Object {
        "description": "Get information about the current user",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "activities": Object {
                      "items": Object {
                        "description": "Names of system activities this user can perform",
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "id": Object {
                      "description": "User's unique ID, used internally and for identifying the user when interacting with the API",
                      "type": "number",
                    },
                    "role": Object {},
                    "state": Object {
                      "description": "The state/territory/district that this user is assigned to",
                      "properties": Object {
                        "id": Object {
                          "description": "Lowercase 2-letter code",
                          "type": "string",
                        },
                        "name": Object {
                          "description": "State/territory/district full name",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "username": Object {
                      "description": "User's unique username (email address)",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The current user",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the current user's information",
        "tags": Array [
          "Users",
        ],
      },
    },
    "/open-api": Object {
      "get": Object {
        "description": "Returns this document",
        "responses": Object {
          "200": Object {
            "description": "This OpenAPI document",
          },
        },
        "summary": "Gets this document",
        "tags": Array [
          "Metadata",
        ],
      },
    },
    "/users": Object {
      "get": Object {
        "description": "Get a list of all users in the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "email": Object {
                        "description": "User's email address",
                        "format": "email",
                        "type": "string",
                      },
                      "id": Object {
                        "description": "User's unique ID",
                        "type": "number",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of users known to the system",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets a list of all users",
        "tags": Array [
          "Users",
        ],
      },
      "post": Object {
        "description": "Add a new user to the system",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "email": Object {
                    "description": "The new user's email address",
                    "format": "email",
                    "type": "string",
                  },
                  "password": Object {
                    "description": "The new user's password",
                    "type": "string",
                  },
                },
                "required": Array [
                  "email",
                  "password",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "description": "The user was successfully added",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Invalid user submitted, such as email address already exists or password is weak",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Adds a new user",
        "tags": Array [
          "Users",
        ],
      },
    },
    "/users/{id}": Object {
      "delete": Object {
        "description": "Delete a user from the system",
        "parameters": Array [
          Object {
            "description": "The ID of the user to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The user was successfully deleted",
          },
          "400": Object {
            "description": "The provided user ID was invalid",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The user ID does not match any known users",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Removes a user",
        "tags": Array [
          "Users",
        ],
      },
      "get": Object {
        "description": "Get a specific user in the system",
        "parameters": Array [
          Object {
            "description": "The ID of the user to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "description": "User's email address",
                      "format": "email",
                      "type": "string",
                    },
                    "id": Object {
                      "description": "User's unique ID",
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The matching user",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The user ID does not match any known users",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the information for a specific user",
        "tags": Array [
          "Users",
        ],
      },
    },
  },
}
`;
