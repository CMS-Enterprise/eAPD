// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open-api endpoint | GET /open-api 1`] = `
Object {
  "components": Object {
    "schemas": Object {
      "apd": Object {
        "properties": Object {
          "activities": Object {
            "items": Object {
              "properties": Object {
                "alernatives": Object {
                  "description": "Alternative considerations for the activity",
                  "type": "string",
                },
                "contractorResources": Object {
                  "items": Object {
                    "description": "Activity contractor resource",
                    "properties": Object {
                      "description": Object {
                        "description": "Description",
                        "type": "string",
                      },
                      "end": Object {
                        "description": "When the contractor resource will end work; date only",
                        "format": "date-time",
                        "type": "string",
                      },
                      "hourly": Object {
                        "properties": Object {
                          "data": Object {
                            "x-patternProperties": Object {
                              "^[0-9]{4}$": Object {
                                "properties": Object {
                                  "hours": Object {
                                    "description": "Number of hours the contractor is expected to work for the given federal fiscal year",
                                    "type": "number",
                                  },
                                  "rate": Object {
                                    "description": "Contractor hourly rate for the given federal fiscal year",
                                    "type": "number",
                                  },
                                },
                                "type": "object",
                              },
                            },
                          },
                          "useHourly": Object {
                            "description": "Whether to use hourly rates for this contractor",
                            "type": "boolean",
                          },
                        },
                        "type": "object",
                      },
                      "name": Object {
                        "description": "Name of the contractor resource",
                        "type": "string",
                      },
                      "start": Object {
                        "description": "When the contractor resource will begin work; date only",
                        "format": "date-time",
                        "type": "string",
                      },
                      "totalCost": Object {
                        "description": "Contractor resource total cost",
                        "type": "number",
                      },
                      "years": Object {
                        "description": "Details of each year the contractor resource will be working",
                        "type": "object",
                        "x-patternProperties": Object {
                          "^[0-9]{4}$": Object {
                            "description": "Contractor resource cost of the year",
                            "type": "number",
                          },
                        },
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "costAllocation": Object {
                  "type": "object",
                  "x-patternProperties": Object {
                    "^[0-9]{4}$": Object {
                      "properties": Object {
                        "ffp": Object {
                          "properties": Object {
                            "federal": Object {
                              "description": "Federal share for this activity for this year, from 0 to 100",
                              "type": "number",
                            },
                            "state": Object {
                              "description": "State share for this activity for this year, from 0 to 100",
                              "type": "number",
                            },
                          },
                          "type": "object",
                        },
                        "other": Object {
                          "description": "Other amount (dollars) for this activity for this year",
                          "type": "number",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "costAllocationNarrative": Object {
                  "properties": Object {
                    "methodology": Object {
                      "description": "Description of the cost allocation methodology",
                      "type": "string",
                    },
                    "otherSources": Object {
                      "description": "Description of other funding sources",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "description": Object {
                  "description": "Activity description",
                  "type": "string",
                },
                "expenses": Object {
                  "items": Object {
                    "description": "Activity expense",
                    "properties": Object {
                      "category": Object {
                        "description": "Expense category, such as \\"Hardware, software, and licensing\\"",
                        "type": "string",
                      },
                      "description": Object {
                        "description": "Short description of the expense",
                        "type": "string",
                      },
                      "years": Object {
                        "description": "Expense entry",
                        "type": "object",
                        "x-patternProperties": Object {
                          "^[0-9]{4}$": Object {
                            "description": "Expense amount for the given federal fiscal year",
                            "type": "number",
                          },
                        },
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "fundingSource": Object {
                  "description": "Federal funding source that applies to this activity",
                  "type": "string",
                },
                "goals": Object {
                  "items": Object {
                    "description": "Activity goal",
                    "properties": Object {
                      "description": Object {
                        "description": "Goal description",
                        "type": "string",
                      },
                      "objective": Object {
                        "description": "Goal objective",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "name": Object {
                  "description": "Activity name, unique within an APD",
                  "type": "string",
                },
                "plannedEndDate": Object {
                  "description": "The date this activity is planned to begin",
                  "format": "date-time",
                  "type": "string",
                },
                "plannedStartDate": Object {
                  "description": "The date this activity is planned to be completed",
                  "format": "date-time",
                  "type": "string",
                },
                "quarterlyFFP": Object {
                  "description": "Federal share of this activity cost, by expense type, per fiscal quarter",
                  "type": "object",
                  "x-patternProperties": Object {
                    "^[0-9]{4}$": Object {
                      "type": "object",
                      "x-patternProperties": Object {
                        "^[1-4]$": Object {
                          "properties": Object {
                            "contractors": Object {
                              "description": "Contractor costs for the given quarter of the given federal fiscal year",
                              "type": "number",
                            },
                            "state": Object {
                              "description": "In-house (state personnel + non-personnel) costs for the given quarter of the given federal fiscal year",
                              "type": "number",
                            },
                          },
                          "type": "object",
                        },
                      },
                    },
                  },
                },
                "schedule": Object {
                  "items": Object {
                    "description": "Activity schedule item",
                    "properties": Object {
                      "endDate": Object {
                        "description": "The date this milestone is planned to be met",
                        "format": "date-time",
                        "type": "string",
                      },
                      "milestone": Object {
                        "description": "The name of the milestone this schedule entry refers to",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "standardsAndConditions": Object {
                  "description": "Description of the 11 standards and conditions",
                  "properties": Object {
                    "businessResults": Object {
                      "type": "string",
                    },
                    "documentation": Object {
                      "type": "string",
                    },
                    "industryStandards": Object {
                      "type": "string",
                    },
                    "interoperability": Object {
                      "type": "string",
                    },
                    "keyPersonnel": Object {
                      "type": "string",
                    },
                    "leverage": Object {
                      "type": "string",
                    },
                    "minimizeCost": Object {
                      "type": "string",
                    },
                    "mita": Object {
                      "type": "string",
                    },
                    "mitigationStrategy": Object {
                      "type": "string",
                    },
                    "modularity": Object {
                      "type": "string",
                    },
                    "reporting": Object {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "statePersonnel": Object {
                  "items": Object {
                    "properties": Object {
                      "description": Object {
                        "description": "Description of the role",
                        "type": "string",
                      },
                      "title": Object {
                        "description": "Title for the state personnel",
                        "type": "string",
                      },
                      "years": Object {
                        "type": "object",
                        "x-patternProperties": Object {
                          "^[0-9]{4}$": Object {
                            "properties": Object {
                              "amt": Object {
                                "description": "State personnel's total cost for the federal fiscal year",
                                "type": "number",
                              },
                              "perc": Object {
                                "description": "Number of FTEs this state personnel will spend on the project for the federal fiscal year",
                                "type": "number",
                              },
                            },
                            "type": "object",
                          },
                        },
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
                "summary": Object {
                  "description": "Short summary of the activity",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "federalCitations": Object {
            "description": "Federal citations that states must assert compliance with. This is a free-form object.",
            "type": "object",
          },
          "id": Object {
            "description": "APD ID",
            "type": "number",
          },
          "incentivePayments": Object {
            "description": "APD incentive payments",
            "type": "object",
            "x-patternProperties": Object {
              "^e[hc](Amt|Ct)$": Object {
                "type": "object",
                "x-patternProperties": Object {
                  "^[0-9]{4}$": Object {
                    "type": "object",
                    "x-patternProperties": Object {
                      "^[1-4]$": Object {
                        "description": "EH or EC payment or count for the given federal fiscal year and quarter",
                        "type": "number",
                      },
                    },
                  },
                },
              },
            },
          },
          "keyPersonnel": Object {
            "items": Object {
              "properties": Object {
                "costs": Object {
                  "type": "object",
                  "x-patternProperties": Object {
                    "^[0-9]{4}$": Object {
                      "description": "Person's cost for the year described by the property name",
                      "type": "number",
                    },
                  },
                },
                "email": Object {
                  "description": "Person's email address",
                  "type": "string",
                },
                "hasCosts": Object {
                  "description": "Whether the person has costs attributable to the project",
                  "type": "boolean",
                },
                "isPrimary": Object {
                  "description": "Whether the person is the primary point of contact for the APD",
                  "type": "boolean",
                },
                "name": Object {
                  "description": "Person's name",
                  "type": "string",
                },
                "percentTime": Object {
                  "description": "Percent of this person's time dedicated to the project, between 0 and 100.",
                  "maximum": 100,
                  "minimum": 0,
                  "type": "number",
                },
                "position": Object {
                  "description": "Person's position",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "type": "array",
          },
          "name": Object {
            "description": "The APD document name, following SEA naming conventions",
            "type": "string",
          },
          "narrativeHIE": Object {
            "description": "Brief description of HIE-funded activities contained in this APD",
            "type": "string",
          },
          "narrativeHIT": Object {
            "description": "Brief description of HIT-funded activities contained in this APD",
            "type": "string",
          },
          "narrativeMMIS": Object {
            "description": "Brief description of MMIS-funded activities contained in this APD",
            "type": "string",
          },
          "previousActivityExpenses": Object {
            "type": "object",
            "x-patternProperties": Object {
              "^[0-9]{4}$": Object {
                "properties": Object {
                  "hithie": Object {
                    "description": "HIT- and HIE-funded expenses",
                    "properties": Object {
                      "federalActual": Object {
                        "description": "Total federal share actually spent",
                        "type": "number",
                      },
                      "totalApproved": Object {
                        "description": "Total approved in the previous APD",
                        "type": "number",
                      },
                    },
                    "type": "object",
                  },
                  "mmis": Object {
                    "description": "HIT-funded expenses",
                    "properties": Object {
                      "50": Object {
                        "federalActual": Object {
                          "description": "Total federal share actually spent",
                          "type": "number",
                        },
                        "totalApproved": Object {
                          "description": "Total approved in the previous APD",
                          "type": "number",
                        },
                      },
                      "75": Object {
                        "federalActual": Object {
                          "description": "Total federal share actually spent",
                          "type": "number",
                        },
                        "totalApproved": Object {
                          "description": "Total approved in the previous APD",
                          "type": "number",
                        },
                      },
                      "90": Object {
                        "federalActual": Object {
                          "description": "Total federal share actually spent",
                          "type": "number",
                        },
                        "totalApproved": Object {
                          "description": "Total approved in the previous APD",
                          "type": "number",
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
          },
          "previousActivitySummary": Object {
            "description": "High-level outline of activities approved in previous APD",
            "type": "string",
          },
          "programOverview": Object {
            "description": "An overview of the overall program",
            "type": "string",
          },
          "state": Object {
            "description": "Two-letter ID of the state, territory, or district this APD belongs to, lowercase",
            "type": "string",
          },
          "stateProfile": Object {
            "description": "The state profile for this specific APD",
            "properties": Object {
              "medicaidDirector": Object {
                "properties": Object {
                  "email": Object {
                    "description": "State Medicaid director's email address",
                    "type": "string",
                  },
                  "name": Object {
                    "description": "State Medicaid director's name",
                    "type": "string",
                  },
                  "phone": Object {
                    "description": "State Medicaid director's phone number",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "medicaidOffice": Object {
                "properties": Object {
                  "address1": Object {
                    "description": "State Medicaid office address",
                    "type": "string",
                  },
                  "address2": Object {
                    "description": "State Medicaid office address",
                    "type": "string",
                  },
                  "city": Object {
                    "description": "State Medicaid office address city",
                    "type": "string",
                  },
                  "state": Object {
                    "description": "State Medicaid office address state",
                    "type": "string",
                  },
                  "zip": Object {
                    "description": "State Medicaid office address ZIP code",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
          "status": Object {
            "description": "Status",
            "type": "string",
          },
          "updated": Object {
            "description": "Timestamp of the last save to this APD",
            "format": "date-time",
            "type": "string",
          },
          "years": Object {
            "items": Object {
              "type": "string",
            },
            "type": "array",
          },
        },
        "type": "object",
      },
    },
    "securitySchemes": Object {
      "sessionCookie": Object {
        "in": "cookie",
        "name": "token",
        "type": "apiKey",
      },
    },
  },
  "info": Object {
    "description": "The API for the CMS HITECH APD app.",
    "title": "CMS HITECH APD API",
    "version": "1.0.0",
  },
  "openapi": "3.0.0",
  "paths": Object {
    "/apds": Object {
      "get": Object {
        "description": "Get a list of all apds associated with requesting user",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "description": "APD ID",
                        "type": "number",
                      },
                      "status": Object {
                        "description": "Current status of the APD; e.g., \\"draft\\", \\"archived\\", etc.",
                        "type": "string",
                      },
                      "updated": Object {
                        "description": "Timestamp of the last save to this APD",
                        "format": "date-time",
                        "type": "string",
                      },
                      "years": Object {
                        "items": Object {
                          "type": "number",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of a user’s apds",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Get all of the APDs available to the user",
        "tags": Array [
          "APDs",
        ],
      },
      "post": Object {
        "description": "Create a new draft APD for the current user's state",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The new APD",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Create a new draft APD associated with the user's state",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/apds/submitted": Object {
      "get": Object {
        "description": "Get a list of all submitted APDs known to the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "$ref": "#/components/schemas/apd",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of submitted APDs",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Get all of the submitted APDs (i.e., not draft)",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/apds/{id}": Object {
      "delete": Object {
        "description": "Updates an APD's status to \\"archive\\" and prevents it from being edited",
        "parameters": Array [
          Object {
            "description": "The ID of the apd to archive",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The APD was archived",
          },
          "400": Object {
            "description": "Invalid request, such as requesting to archive an APD that is not editable",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds for the user",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Archive an APD",
        "tags": Array [
          "APDs",
        ],
      },
      "get": Object {
        "description": "Where the /apds GET method only returns a small portion of all APDs, this method returns all of one",
        "parameters": Array [
          Object {
            "description": "The ID of the apd to get",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The APD",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds for the user",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Get a single, complete APD",
        "tags": Array [
          "APDs",
        ],
      },
      "patch": Object {
        "description": "Update an APD in the system using a set of JSON Patch objects. If state profile information is included, the profile information is also updated for the APD's state.",
        "parameters": Array [
          Object {
            "description": "The ID of the apd to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "items": Object {
                  "description": "A JSON Patch object",
                  "properties": Object {
                    "op": Object {
                      "description": "The JSON Patch operation. This API only supports add, remove, and replace.",
                      "enum": Array [
                        "add",
                        "remove",
                        "replace",
                      ],
                      "type": "string",
                    },
                    "path": Object {
                      "description": "The path of the value to be operated on, specified as a JSON Pointer",
                      "type": "string",
                    },
                    "value": Object {
                      "description": "For add or replace operations, the new value to be applied",
                    },
                  },
                  "type": "object",
                },
                "type": "array",
              },
            },
          },
          "description": "A set of JSON Patch objects to be applied to the APD to change it",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The update was successful",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "oneOf": Array [
                    Object {
                      "items": Object {
                        "description": "If the requested patch caused a validation failure, the API will return a list of invalid paths",
                        "properties": Object {
                          "path": Object {
                            "description": "A JSON Pointer path whose patched value is invalid",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                    Object {
                      "description": "If the requested patch failed for unknown reasons, nothing will be returned",
                      "type": "null",
                    },
                  ],
                },
              },
            },
            "description": "The update failed due to a problem with the input data",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds for the user",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Update a specific APD",
        "tags": Array [
          "APDs",
        ],
      },
      "put": Object {
        "description": "Update an APD in the system.  If state profile information is included, the profile information is also updated for the user's state.",
        "parameters": Array [
          Object {
            "description": "The ID of the apd to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "number",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "$ref": "#/components/schemas/apd",
              },
            },
          },
          "description": "The new values for the apd.  All fields are optional.",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "$ref": "#/components/schemas/apd",
                },
              },
            },
            "description": "The update was successful",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The apd ID does not match any known apds for the user",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Update a specific APD",
        "tags": Array [
          "APDs",
        ],
      },
    },
    "/auth/activities": Object {
      "get": Object {
        "description": "Get a list of all activities in the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "id": Object {
                        "description": "Activity ID",
                        "type": "number",
                      },
                      "name": Object {
                        "description": "Activity name",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of activities known to the system",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the list of all activities",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/login": Object {
      "post": Object {
        "description": "Authenticate a user against the local database",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "password": Object {
                    "type": "string",
                  },
                  "username": Object {
                    "description": "A nonce returned by a request to /auth/login/nonce",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "activities": Object {
                      "items": Object {
                        "description": "Names of system activities this user can perform",
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "id": Object {
                      "description": "User's unique ID, used internally and for identifying the user when interacting with the API",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "The user's name, if defined",
                      "type": "string",
                    },
                    "phone": Object {
                      "description": "The user's phone number, if defined",
                      "type": "string",
                    },
                    "position": Object {
                      "description": "The user's position, if defined",
                      "type": "string",
                    },
                    "role": Object {
                      "description": "Names of system authorization role this user belongs to",
                      "type": "string",
                    },
                    "state": Object {
                      "description": "The state/territory/district that this user is assigned to",
                      "properties": Object {
                        "id": Object {
                          "description": "Lowercase 2-letter code",
                          "type": "string",
                        },
                        "name": Object {
                          "description": "State/territory/district full name",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "username": Object {
                      "description": "User's unique username (email address)",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Successful login",
            "headers": Object {
              "Set-Cookie": Object {
                "schema": Object {
                  "example": "token=auth-token-jwt; path=/; expires=Sat, 1 Jan 2035 12:00:00 GMT; httponly",
                  "type": "string",
                },
              },
            },
          },
          "400": Object {
            "description": "Missing username or password",
          },
          "401": Object {
            "description": "Unsuccessful login",
          },
        },
        "summary": "Logs a user in",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/login/nonce": Object {
      "post": Object {
        "description": "To help mitigate replay attacks, the server authentication requires a server-signed nonce. The nonce contains the authenticating username, is cryptographically signed by the server, and is only valid for 3 seconds. This nonce is passed to requests to /auth/login",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "username": Object {
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "nonce": Object {
                      "description": "JWT-encoded string that acts as the nonce for this authentication.  This nonce is required for API requests to /auth/login.  Any username value will generate a nonce; receiving a nonce is not a guarantee that the username is valid.",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Obtained a nonce",
          },
          "400": Object {
            "description": "Missing username",
          },
        },
        "summary": "Gets a login nonce",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/logout": Object {
      "get": Object {
        "description": "Logs the user out by invalidating the session cookie",
        "responses": Object {
          "200": Object {
            "description": "Clears the session cookie",
            "headers": Object {
              "Set-Cookie": Object {
                "schema": Object {
                  "example": "session=; expires=; httponly",
                  "type": "string",
                },
              },
            },
          },
        },
        "summary": "Logs the current user out",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/roles": Object {
      "get": Object {
        "description": "Get a list of all roles in the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "activities": Object {
                        "items": Object {
                          "description": "Activity name",
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "id": Object {
                        "description": "Role ID",
                        "type": "number",
                      },
                      "name": Object {
                        "description": "Role name",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of roles known to the system",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the list of all roles",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
      "post": Object {
        "description": "Create a new role",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "activities": Object {
                    "description": "List of activities to associate with this role; this list is definitive and after this operation, only the activities in this list will be associated with the role",
                    "items": Object {
                      "description": "An activity ID",
                      "type": "number",
                    },
                    "type": "array",
                  },
                  "name": Object {
                    "description": "The new role name. Must be unique.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "The new values for the new role",
          "required": true,
        },
        "responses": Object {
          "201": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "activities": Object {
                      "items": Object {
                        "description": "Activity name",
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "id": Object {
                      "description": "Role ID",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "Role name",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The newly-created role object",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The body of the request is invalid: there are no activities defined, some activities are not numeric, or some activities do not exist",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Creates a new role",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/auth/roles/{id}": Object {
      "delete": Object {
        "description": "Remove the associations between a role and activities, and delete the role",
        "parameters": Array [
          Object {
            "description": "The ID of the role to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The role was deleted successfully",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The role ID does not match any known roles",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Deletes a role",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
      "put": Object {
        "description": "Change which activities an existing role is associated with",
        "parameters": Array [
          Object {
            "description": "The ID of the role to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "activities": Object {
                    "description": "List of activities to associate with this role; this list is definitive and after this operation, only the activities in this list will be associated with the role",
                    "items": Object {
                      "description": "An activity ID",
                      "type": "number",
                    },
                    "type": "array",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "The new values for the role",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "description": "The activities now associated with the role",
                    "type": "number",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The update was successful",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The body of the request is invalid: there are no activities defined, some activities are not numeric, or some activities do not exist",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The role ID does not match any known roles",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Sets the activities for a role",
        "tags": Array [
          "Authentication and authorization",
        ],
      },
    },
    "/me": Object {
      "get": Object {
        "description": "Get information about the current user",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "activities": Object {
                      "items": Object {
                        "description": "Names of system activities this user can perform",
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "id": Object {
                      "description": "User's unique ID, used internally and for identifying the user when interacting with the API",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "The user's name, if defined",
                      "type": "string",
                    },
                    "phone": Object {
                      "description": "The user's phone number, if defined",
                      "type": "string",
                    },
                    "position": Object {
                      "description": "The user's position, if defined",
                      "type": "string",
                    },
                    "role": Object {
                      "description": "Names of system authorization role this user belongs to",
                      "type": "string",
                    },
                    "state": Object {
                      "description": "The state/territory/district that this user is assigned to",
                      "properties": Object {
                        "id": Object {
                          "description": "Lowercase 2-letter code",
                          "type": "string",
                        },
                        "name": Object {
                          "description": "State/territory/district full name",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "username": Object {
                      "description": "User's unique username (email address)",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The current user",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the current user's information",
        "tags": Array [
          "Users",
        ],
      },
      "put": Object {
        "description": "Update information about the current user.  Only the name, password, phone, and position fields can be updated.",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "name": Object {
                    "description": "The user's updated name. Omit to leave unchanged.",
                    "type": "string",
                  },
                  "password": Object {
                    "description": "The user's updated password. Omit to leave unchanged.",
                    "type": "string",
                  },
                  "phone": Object {
                    "description": "The user's updated phone number. Omit to leave unchanged.",
                    "type": "string",
                  },
                  "position": Object {
                    "description": "The user's updated position. Omit to leave unchanged.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
          "description": "The new values for the apd.  All fields are optional.",
          "required": true,
        },
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "activities": Object {
                      "items": Object {
                        "description": "Names of system activities this user can perform",
                        "type": "string",
                      },
                      "type": "array",
                    },
                    "id": Object {
                      "description": "User's unique ID, used internally and for identifying the user when interacting with the API",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "The user's name, if defined",
                      "type": "string",
                    },
                    "phone": Object {
                      "description": "The user's phone number, if defined",
                      "type": "string",
                    },
                    "position": Object {
                      "description": "The user's position, if defined",
                      "type": "string",
                    },
                    "role": Object {
                      "description": "Names of system authorization role this user belongs to",
                      "type": "string",
                    },
                    "state": Object {
                      "description": "The state/territory/district that this user is assigned to",
                      "properties": Object {
                        "id": Object {
                          "description": "Lowercase 2-letter code",
                          "type": "string",
                        },
                        "name": Object {
                          "description": "State/territory/district full name",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "username": Object {
                      "description": "User's unique username (email address)",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The current user",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Updated information is invalid",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Updates the current user's information",
        "tags": Array [
          "Users",
        ],
      },
    },
    "/open-api": Object {
      "get": Object {
        "description": "Returns this document",
        "responses": Object {
          "200": Object {
            "description": "This OpenAPI document",
          },
        },
        "summary": "Gets this document",
        "tags": Array [
          "Metadata",
        ],
      },
    },
    "/users": Object {
      "get": Object {
        "description": "Get a list of all users in the system",
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "items": Object {
                    "properties": Object {
                      "email": Object {
                        "description": "User's email address",
                        "format": "email",
                        "type": "string",
                      },
                      "id": Object {
                        "description": "User's unique ID",
                        "type": "number",
                      },
                      "name": Object {
                        "description": "User's name",
                        "type": "string",
                      },
                      "phone": Object {
                        "description": "User's phone number; up to 10 digits",
                        "type": "string",
                      },
                      "position": Object {
                        "description": "User's position in the state’s Medicaid program",
                        "type": "string",
                      },
                      "role": Object {
                        "description": "The user's role name, if any. Can be null.",
                        "type": "string",
                      },
                      "state": Object {
                        "description": "Two-letter ID of the state this user is associated with, if any",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "The list of users known to the system",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets a list of all users",
        "tags": Array [
          "Users",
        ],
      },
      "post": Object {
        "description": "Add a new user to the system",
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "email": Object {
                    "description": "The new user's email address",
                    "format": "email",
                    "type": "string",
                  },
                  "password": Object {
                    "description": "The new user's password",
                    "type": "string",
                  },
                },
                "required": Array [
                  "email",
                  "password",
                ],
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "200": Object {
            "description": "The user was successfully added",
          },
          "400": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Invalid user submitted, such as email address already exists or password is weak",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Adds a new user",
        "tags": Array [
          "Users",
        ],
      },
    },
    "/users/{id}": Object {
      "delete": Object {
        "description": "Delete a user from the system",
        "parameters": Array [
          Object {
            "description": "The ID of the user to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "204": Object {
            "description": "The user was successfully deleted",
          },
          "400": Object {
            "description": "The provided user ID was invalid",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The user ID does not match any known users",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Removes a user",
        "tags": Array [
          "Users",
        ],
      },
      "get": Object {
        "description": "Get a specific user in the system",
        "parameters": Array [
          Object {
            "description": "The ID of the user to fetch",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "responses": Object {
          "200": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "email": Object {
                      "description": "User's email address",
                      "format": "email",
                      "type": "string",
                    },
                    "id": Object {
                      "description": "User's unique ID",
                      "type": "number",
                    },
                    "name": Object {
                      "description": "User's name",
                      "type": "string",
                    },
                    "phone": Object {
                      "description": "User's phone number; up to 10 digits",
                      "type": "string",
                    },
                    "position": Object {
                      "description": "User's position in the state’s Medicaid program",
                      "type": "string",
                    },
                    "role": Object {
                      "description": "The user's role name, if any. Can be null.",
                      "type": "string",
                    },
                    "state": Object {
                      "description": "Two-letter ID of the state this user is associated with, if any",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The matching user",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "content": Object {
              "application/json": Object {
                "schema": Object {
                  "properties": Object {
                    "error": Object {
                      "description": "An string token indicating the error, which could be translated into a user-readable string for display by the client",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The user ID does not match any known users",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Gets the information for a specific user",
        "tags": Array [
          "Users",
        ],
      },
      "put": Object {
        "description": "Update a user in the system.",
        "parameters": Array [
          Object {
            "description": "The ID of the user to update",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": Object {
              "type": "integer",
            },
          },
        ],
        "requestBody": Object {
          "content": Object {
            "application/json": Object {
              "schema": Object {
                "properties": Object {
                  "email": Object {
                    "description": "The user's new email address",
                    "format": "email",
                    "type": "string",
                  },
                  "name": Object {
                    "description": "The user's new name",
                    "type": "string",
                  },
                  "password": Object {
                    "description": "The user's new password",
                    "type": "string",
                  },
                  "phone": Object {
                    "description": "The user's new phone number",
                    "type": "string",
                  },
                  "position": Object {
                    "description": "The user's new position",
                    "type": "string",
                  },
                  "role": Object {
                    "description": "The user's new authorization role. If provided, this must match a valid role name in the system or be an empty string to remove the role entirely. Ignored if the user is updating their own account.",
                    "type": "string",
                  },
                  "state": Object {
                    "description": "The user's new state. Must match the two-letter ID of a state known to the system.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
          },
        },
        "responses": Object {
          "204": Object {
            "description": "The user was successfully updated",
          },
          "400": Object {
            "description": "The request was invalid",
          },
          "401": Object {
            "description": "Does not have permission to this activity",
          },
          "403": Object {
            "description": "Not logged in",
          },
          "404": Object {
            "description": "The user ID does not match any known users",
          },
        },
        "security": Array [
          Object {
            "sessionCookie": Array [],
          },
        ],
        "summary": "Updates a user account",
        "tags": Array [
          "Users",
        ],
      },
    },
  },
}
`;
